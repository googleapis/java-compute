/*
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/compute/v1/compute.proto

package com.google.cloud.compute.v1;

public interface NotificationEndpointGrpcSettingsOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.compute.v1.NotificationEndpointGrpcSettings)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Optional. If specified, this field is used to set the authority header by the sender of notifications. See https://tools.ietf.org/html/rfc7540#section-8.1.2.3
   * </pre>
   *
   * <code>string authority = 133433155;</code>
   *
   * @return The authority.
   */
  java.lang.String getAuthority();
  /**
   *
   *
   * <pre>
   * Optional. If specified, this field is used to set the authority header by the sender of notifications. See https://tools.ietf.org/html/rfc7540#section-8.1.2.3
   * </pre>
   *
   * <code>string authority = 133433155;</code>
   *
   * @return The bytes for authority.
   */
  com.google.protobuf.ByteString getAuthorityBytes();

  /**
   *
   *
   * <pre>
   * Endpoint to which gRPC notifications are sent. This must be a valid gRPCLB DNS name.
   * </pre>
   *
   * <code>string endpoint = 130489749;</code>
   *
   * @return The endpoint.
   */
  java.lang.String getEndpoint();
  /**
   *
   *
   * <pre>
   * Endpoint to which gRPC notifications are sent. This must be a valid gRPCLB DNS name.
   * </pre>
   *
   * <code>string endpoint = 130489749;</code>
   *
   * @return The bytes for endpoint.
   */
  com.google.protobuf.ByteString getEndpointBytes();

  /**
   *
   *
   * <pre>
   * Optional. If specified, this field is used to populate the "name" field in gRPC requests.
   * </pre>
   *
   * <code>string payload_name = 31922844;</code>
   *
   * @return The payloadName.
   */
  java.lang.String getPayloadName();
  /**
   *
   *
   * <pre>
   * Optional. If specified, this field is used to populate the "name" field in gRPC requests.
   * </pre>
   *
   * <code>string payload_name = 31922844;</code>
   *
   * @return The bytes for payloadName.
   */
  com.google.protobuf.ByteString getPayloadNameBytes();

  /**
   *
   *
   * <pre>
   * Optional. This field is used to configure how often to send a full update of all non-healthy backends. If unspecified, full updates are not sent. If specified, must be in the range between 600 seconds to 3600 seconds. Nanos are disallowed.
   * </pre>
   *
   * <code>.google.cloud.compute.v1.Duration resend_interval = 209853513;</code>
   *
   * @return Whether the resendInterval field is set.
   */
  boolean hasResendInterval();
  /**
   *
   *
   * <pre>
   * Optional. This field is used to configure how often to send a full update of all non-healthy backends. If unspecified, full updates are not sent. If specified, must be in the range between 600 seconds to 3600 seconds. Nanos are disallowed.
   * </pre>
   *
   * <code>.google.cloud.compute.v1.Duration resend_interval = 209853513;</code>
   *
   * @return The resendInterval.
   */
  com.google.cloud.compute.v1.Duration getResendInterval();
  /**
   *
   *
   * <pre>
   * Optional. This field is used to configure how often to send a full update of all non-healthy backends. If unspecified, full updates are not sent. If specified, must be in the range between 600 seconds to 3600 seconds. Nanos are disallowed.
   * </pre>
   *
   * <code>.google.cloud.compute.v1.Duration resend_interval = 209853513;</code>
   */
  com.google.cloud.compute.v1.DurationOrBuilder getResendIntervalOrBuilder();

  /**
   *
   *
   * <pre>
   * How much time (in seconds) is spent attempting notification retries until a successful response is received. Default is 30s. Limit is 20m (1200s). Must be a positive number.
   * </pre>
   *
   * <code>uint32 retry_duration_sec = 115681117;</code>
   *
   * @return The retryDurationSec.
   */
  int getRetryDurationSec();
}
