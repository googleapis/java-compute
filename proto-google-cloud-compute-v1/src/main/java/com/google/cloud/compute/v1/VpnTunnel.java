/*
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/compute/v1/compute.proto

package com.google.cloud.compute.v1;

/**
 *
 *
 * <pre>
 * Represents a Cloud VPN Tunnel resource.
 * For more information about VPN, read the  the Cloud VPN Overview. (== resource_for {$api_version}.vpnTunnels ==)
 * </pre>
 *
 * Protobuf type {@code google.cloud.compute.v1.VpnTunnel}
 */
public final class VpnTunnel extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.compute.v1.VpnTunnel)
    VpnTunnelOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use VpnTunnel.newBuilder() to construct.
  private VpnTunnel(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private VpnTunnel() {
    creationTimestamp_ = "";
    description_ = "";
    detailedStatus_ = "";
    id_ = "";
    kind_ = "";
    localTrafficSelector_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    name_ = "";
    peerExternalGateway_ = "";
    peerGcpGateway_ = "";
    peerIp_ = "";
    region_ = "";
    remoteTrafficSelector_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    router_ = "";
    selfLink_ = "";
    sharedSecret_ = "";
    sharedSecretHash_ = "";
    status_ = 0;
    targetVpnGateway_ = "";
    vpnGateway_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new VpnTunnel();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
    return this.unknownFields;
  }

  private VpnTunnel(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 26842:
            {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
          case 26336418:
            {
              java.lang.String s = input.readStringRequireUtf8();

              kind_ = s;
              break;
            }
          case 26989658:
            {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
          case 107455970:
            {
              java.lang.String s = input.readStringRequireUtf8();

              peerGcpGateway_ = s;
              break;
            }
          case 244202930:
            {
              java.lang.String s = input.readStringRequireUtf8();

              creationTimestamp_ = s;
              break;
            }
          case 391033258:
            {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                localTrafficSelector_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              localTrafficSelector_.add(s);
              break;
            }
          case 520524554:
            {
              java.lang.String s = input.readStringRequireUtf8();

              detailedStatus_ = s;
              break;
            }
          case 723613138:
            {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                remoteTrafficSelector_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              remoteTrafficSelector_.add(s);
              break;
            }
          case 767832984:
            {
              vpnGatewayInterface_ = input.readInt32();
              break;
            }
          case 907976274:
            {
              java.lang.String s = input.readStringRequireUtf8();

              sharedSecret_ = s;
              break;
            }
          case 918513954:
            {
              java.lang.String s = input.readStringRequireUtf8();

              peerIp_ = s;
              break;
            }
          case 932165738:
            {
              java.lang.String s = input.readStringRequireUtf8();

              peerExternalGateway_ = s;
              break;
            }
          case 1043571482:
            {
              java.lang.String s = input.readStringRequireUtf8();

              sharedSecretHash_ = s;
              break;
            }
          case 1105989578:
            {
              java.lang.String s = input.readStringRequireUtf8();

              vpnGateway_ = s;
              break;
            }
          case 1111570338:
            {
              java.lang.String s = input.readStringRequireUtf8();

              region_ = s;
              break;
            }
          case 1188870730:
            {
              java.lang.String s = input.readStringRequireUtf8();

              router_ = s;
              break;
            }
          case 1236017122:
            {
              java.lang.String s = input.readStringRequireUtf8();

              description_ = s;
              break;
            }
          case 1450082192:
            {
              int rawValue = input.readEnum();

              status_ = rawValue;
              break;
            }
          case 1474663480:
            {
              peerExternalGatewayInterface_ = input.readInt32();
              break;
            }
          case 1502234730:
            {
              java.lang.String s = input.readStringRequireUtf8();

              selfLink_ = s;
              break;
            }
          case 1747009760:
            {
              ikeVersion_ = input.readInt32();
              break;
            }
          case 2112619098:
            {
              java.lang.String s = input.readStringRequireUtf8();

              targetVpnGateway_ = s;
              break;
            }
          default:
            {
              if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        localTrafficSelector_ = localTrafficSelector_.getUnmodifiableView();
      }
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        remoteTrafficSelector_ = remoteTrafficSelector_.getUnmodifiableView();
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.compute.v1.Compute
        .internal_static_google_cloud_compute_v1_VpnTunnel_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.compute.v1.Compute
        .internal_static_google_cloud_compute_v1_VpnTunnel_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.compute.v1.VpnTunnel.class,
            com.google.cloud.compute.v1.VpnTunnel.Builder.class);
  }

  /**
   *
   *
   * <pre>
   * [Output Only] The status of the VPN tunnel, which can be one of the following:
   * - PROVISIONING: Resource is being allocated for the VPN tunnel.
   * - WAITING_FOR_FULL_CONFIG: Waiting to receive all VPN-related configs from the user. Network, TargetVpnGateway, VpnTunnel, ForwardingRule, and Route resources are needed to setup the VPN tunnel.
   * - FIRST_HANDSHAKE: Successful first handshake with the peer VPN.
   * - ESTABLISHED: Secure session is successfully established with the peer VPN.
   * - NETWORK_ERROR: Deprecated, replaced by NO_INCOMING_PACKETS
   * - AUTHORIZATION_ERROR: Auth error (for example, bad shared secret).
   * - NEGOTIATION_FAILURE: Handshake failed.
   * - DEPROVISIONING: Resources are being deallocated for the VPN tunnel.
   * - FAILED: Tunnel creation has failed and the tunnel is not ready to be used.
   * - NO_INCOMING_PACKETS: No incoming packets from peer.
   * - REJECTED: Tunnel configuration was rejected, can be result of being blacklisted.
   * - ALLOCATING_RESOURCES: Cloud VPN is in the process of allocating all required resources.
   * - STOPPED: Tunnel is stopped due to its Forwarding Rules being deleted for Classic VPN tunnels or the project is in frozen state.
   * - PEER_IDENTITY_MISMATCH: Peer identity does not match peer IP, probably behind NAT.
   * - TS_NARROWING_NOT_ALLOWED: Traffic selector narrowing not allowed for an HA-VPN tunnel.
   * </pre>
   *
   * Protobuf enum {@code google.cloud.compute.v1.VpnTunnel.Status}
   */
  public enum Status implements com.google.protobuf.ProtocolMessageEnum {
    /**
     *
     *
     * <pre>
     * A value indicating that the enum field is not set.
     * </pre>
     *
     * <code>UNDEFINED_STATUS = 0;</code>
     */
    UNDEFINED_STATUS(0),
    /** <code>ALLOCATING_RESOURCES = 52487360;</code> */
    ALLOCATING_RESOURCES(52487360),
    /** <code>AUTHORIZATION_ERROR = 23580290;</code> */
    AUTHORIZATION_ERROR(23580290),
    /** <code>DEPROVISIONING = 160500206;</code> */
    DEPROVISIONING(160500206),
    /** <code>ESTABLISHED = 88852344;</code> */
    ESTABLISHED(88852344),
    /** <code>FAILED = 187271229;</code> */
    FAILED(187271229),
    /** <code>FIRST_HANDSHAKE = 191393000;</code> */
    FIRST_HANDSHAKE(191393000),
    /** <code>NEGOTIATION_FAILURE = 91890412;</code> */
    NEGOTIATION_FAILURE(91890412),
    /** <code>NETWORK_ERROR = 193912951;</code> */
    NETWORK_ERROR(193912951),
    /** <code>NO_INCOMING_PACKETS = 119983216;</code> */
    NO_INCOMING_PACKETS(119983216),
    /** <code>PROVISIONING = 22461165;</code> */
    PROVISIONING(22461165),
    /** <code>REJECTED = 174130302;</code> */
    REJECTED(174130302),
    /** <code>STOPPED = 175840685;</code> */
    STOPPED(175840685),
    /** <code>WAITING_FOR_FULL_CONFIG = 41640522;</code> */
    WAITING_FOR_FULL_CONFIG(41640522),
    UNRECOGNIZED(-1),
    ;

    /**
     *
     *
     * <pre>
     * A value indicating that the enum field is not set.
     * </pre>
     *
     * <code>UNDEFINED_STATUS = 0;</code>
     */
    public static final int UNDEFINED_STATUS_VALUE = 0;
    /** <code>ALLOCATING_RESOURCES = 52487360;</code> */
    public static final int ALLOCATING_RESOURCES_VALUE = 52487360;
    /** <code>AUTHORIZATION_ERROR = 23580290;</code> */
    public static final int AUTHORIZATION_ERROR_VALUE = 23580290;
    /** <code>DEPROVISIONING = 160500206;</code> */
    public static final int DEPROVISIONING_VALUE = 160500206;
    /** <code>ESTABLISHED = 88852344;</code> */
    public static final int ESTABLISHED_VALUE = 88852344;
    /** <code>FAILED = 187271229;</code> */
    public static final int FAILED_VALUE = 187271229;
    /** <code>FIRST_HANDSHAKE = 191393000;</code> */
    public static final int FIRST_HANDSHAKE_VALUE = 191393000;
    /** <code>NEGOTIATION_FAILURE = 91890412;</code> */
    public static final int NEGOTIATION_FAILURE_VALUE = 91890412;
    /** <code>NETWORK_ERROR = 193912951;</code> */
    public static final int NETWORK_ERROR_VALUE = 193912951;
    /** <code>NO_INCOMING_PACKETS = 119983216;</code> */
    public static final int NO_INCOMING_PACKETS_VALUE = 119983216;
    /** <code>PROVISIONING = 22461165;</code> */
    public static final int PROVISIONING_VALUE = 22461165;
    /** <code>REJECTED = 174130302;</code> */
    public static final int REJECTED_VALUE = 174130302;
    /** <code>STOPPED = 175840685;</code> */
    public static final int STOPPED_VALUE = 175840685;
    /** <code>WAITING_FOR_FULL_CONFIG = 41640522;</code> */
    public static final int WAITING_FOR_FULL_CONFIG_VALUE = 41640522;

    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Status valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Status forNumber(int value) {
      switch (value) {
        case 0:
          return UNDEFINED_STATUS;
        case 52487360:
          return ALLOCATING_RESOURCES;
        case 23580290:
          return AUTHORIZATION_ERROR;
        case 160500206:
          return DEPROVISIONING;
        case 88852344:
          return ESTABLISHED;
        case 187271229:
          return FAILED;
        case 191393000:
          return FIRST_HANDSHAKE;
        case 91890412:
          return NEGOTIATION_FAILURE;
        case 193912951:
          return NETWORK_ERROR;
        case 119983216:
          return NO_INCOMING_PACKETS;
        case 22461165:
          return PROVISIONING;
        case 174130302:
          return REJECTED;
        case 175840685:
          return STOPPED;
        case 41640522:
          return WAITING_FOR_FULL_CONFIG;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Status> internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<Status> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<Status>() {
          public Status findValueByNumber(int number) {
            return Status.forNumber(number);
          }
        };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return com.google.cloud.compute.v1.VpnTunnel.getDescriptor().getEnumTypes().get(0);
    }

    private static final Status[] VALUES = values();

    public static Status valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Status(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.cloud.compute.v1.VpnTunnel.Status)
  }

  public static final int CREATION_TIMESTAMP_FIELD_NUMBER = 30525366;
  private volatile java.lang.Object creationTimestamp_;
  /**
   *
   *
   * <pre>
   * [Output Only] Creation timestamp in RFC3339 text format.
   * </pre>
   *
   * <code>string creation_timestamp = 30525366;</code>
   *
   * @return The creationTimestamp.
   */
  @java.lang.Override
  public java.lang.String getCreationTimestamp() {
    java.lang.Object ref = creationTimestamp_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      creationTimestamp_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * [Output Only] Creation timestamp in RFC3339 text format.
   * </pre>
   *
   * <code>string creation_timestamp = 30525366;</code>
   *
   * @return The bytes for creationTimestamp.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getCreationTimestampBytes() {
    java.lang.Object ref = creationTimestamp_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      creationTimestamp_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DESCRIPTION_FIELD_NUMBER = 154502140;
  private volatile java.lang.Object description_;
  /**
   *
   *
   * <pre>
   * An optional description of this resource. Provide this property when you create the resource.
   * </pre>
   *
   * <code>string description = 154502140;</code>
   *
   * @return The description.
   */
  @java.lang.Override
  public java.lang.String getDescription() {
    java.lang.Object ref = description_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      description_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * An optional description of this resource. Provide this property when you create the resource.
   * </pre>
   *
   * <code>string description = 154502140;</code>
   *
   * @return The bytes for description.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getDescriptionBytes() {
    java.lang.Object ref = description_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      description_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DETAILED_STATUS_FIELD_NUMBER = 65065569;
  private volatile java.lang.Object detailedStatus_;
  /**
   *
   *
   * <pre>
   * [Output Only] Detailed status message for the VPN tunnel.
   * </pre>
   *
   * <code>string detailed_status = 65065569;</code>
   *
   * @return The detailedStatus.
   */
  @java.lang.Override
  public java.lang.String getDetailedStatus() {
    java.lang.Object ref = detailedStatus_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      detailedStatus_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * [Output Only] Detailed status message for the VPN tunnel.
   * </pre>
   *
   * <code>string detailed_status = 65065569;</code>
   *
   * @return The bytes for detailedStatus.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getDetailedStatusBytes() {
    java.lang.Object ref = detailedStatus_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      detailedStatus_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ID_FIELD_NUMBER = 3355;
  private volatile java.lang.Object id_;
  /**
   *
   *
   * <pre>
   * [Output Only] The unique identifier for the resource. This identifier is defined by the server.
   * </pre>
   *
   * <code>string id = 3355;</code>
   *
   * @return The id.
   */
  @java.lang.Override
  public java.lang.String getId() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      id_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * [Output Only] The unique identifier for the resource. This identifier is defined by the server.
   * </pre>
   *
   * <code>string id = 3355;</code>
   *
   * @return The bytes for id.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getIdBytes() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      id_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int IKE_VERSION_FIELD_NUMBER = 218376220;
  private int ikeVersion_;
  /**
   *
   *
   * <pre>
   * IKE protocol version to use when establishing the VPN tunnel with the peer VPN gateway. Acceptable IKE versions are 1 or 2. The default version is 2.
   * </pre>
   *
   * <code>int32 ike_version = 218376220;</code>
   *
   * @return The ikeVersion.
   */
  @java.lang.Override
  public int getIkeVersion() {
    return ikeVersion_;
  }

  public static final int KIND_FIELD_NUMBER = 3292052;
  private volatile java.lang.Object kind_;
  /**
   *
   *
   * <pre>
   * [Output Only] Type of resource. Always compute#vpnTunnel for VPN tunnels.
   * </pre>
   *
   * <code>string kind = 3292052;</code>
   *
   * @return The kind.
   */
  @java.lang.Override
  public java.lang.String getKind() {
    java.lang.Object ref = kind_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      kind_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * [Output Only] Type of resource. Always compute#vpnTunnel for VPN tunnels.
   * </pre>
   *
   * <code>string kind = 3292052;</code>
   *
   * @return The bytes for kind.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getKindBytes() {
    java.lang.Object ref = kind_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      kind_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int LOCAL_TRAFFIC_SELECTOR_FIELD_NUMBER = 48879157;
  private com.google.protobuf.LazyStringList localTrafficSelector_;
  /**
   *
   *
   * <pre>
   * Local traffic selector to use when establishing the VPN tunnel with the peer VPN gateway. The value should be a CIDR formatted string, for example: 192.168.0.0/16. The ranges must be disjoint. Only IPv4 is supported.
   * </pre>
   *
   * <code>repeated string local_traffic_selector = 48879157;</code>
   *
   * @return A list containing the localTrafficSelector.
   */
  public com.google.protobuf.ProtocolStringList getLocalTrafficSelectorList() {
    return localTrafficSelector_;
  }
  /**
   *
   *
   * <pre>
   * Local traffic selector to use when establishing the VPN tunnel with the peer VPN gateway. The value should be a CIDR formatted string, for example: 192.168.0.0/16. The ranges must be disjoint. Only IPv4 is supported.
   * </pre>
   *
   * <code>repeated string local_traffic_selector = 48879157;</code>
   *
   * @return The count of localTrafficSelector.
   */
  public int getLocalTrafficSelectorCount() {
    return localTrafficSelector_.size();
  }
  /**
   *
   *
   * <pre>
   * Local traffic selector to use when establishing the VPN tunnel with the peer VPN gateway. The value should be a CIDR formatted string, for example: 192.168.0.0/16. The ranges must be disjoint. Only IPv4 is supported.
   * </pre>
   *
   * <code>repeated string local_traffic_selector = 48879157;</code>
   *
   * @param index The index of the element to return.
   * @return The localTrafficSelector at the given index.
   */
  public java.lang.String getLocalTrafficSelector(int index) {
    return localTrafficSelector_.get(index);
  }
  /**
   *
   *
   * <pre>
   * Local traffic selector to use when establishing the VPN tunnel with the peer VPN gateway. The value should be a CIDR formatted string, for example: 192.168.0.0/16. The ranges must be disjoint. Only IPv4 is supported.
   * </pre>
   *
   * <code>repeated string local_traffic_selector = 48879157;</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the localTrafficSelector at the given index.
   */
  public com.google.protobuf.ByteString getLocalTrafficSelectorBytes(int index) {
    return localTrafficSelector_.getByteString(index);
  }

  public static final int NAME_FIELD_NUMBER = 3373707;
  private volatile java.lang.Object name_;
  /**
   *
   *
   * <pre>
   * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
   * </pre>
   *
   * <code>string name = 3373707;</code>
   *
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
   * </pre>
   *
   * <code>string name = 3373707;</code>
   *
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PEER_EXTERNAL_GATEWAY_FIELD_NUMBER = 116520717;
  private volatile java.lang.Object peerExternalGateway_;
  /**
   *
   *
   * <pre>
   * URL of the peer side external VPN gateway to which this VPN tunnel is connected. Provided by the client when the VPN tunnel is created. This field is exclusive with the field peerGcpGateway.
   * </pre>
   *
   * <code>string peer_external_gateway = 116520717;</code>
   *
   * @return The peerExternalGateway.
   */
  @java.lang.Override
  public java.lang.String getPeerExternalGateway() {
    java.lang.Object ref = peerExternalGateway_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      peerExternalGateway_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * URL of the peer side external VPN gateway to which this VPN tunnel is connected. Provided by the client when the VPN tunnel is created. This field is exclusive with the field peerGcpGateway.
   * </pre>
   *
   * <code>string peer_external_gateway = 116520717;</code>
   *
   * @return The bytes for peerExternalGateway.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getPeerExternalGatewayBytes() {
    java.lang.Object ref = peerExternalGateway_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      peerExternalGateway_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PEER_EXTERNAL_GATEWAY_INTERFACE_FIELD_NUMBER = 184332935;
  private int peerExternalGatewayInterface_;
  /**
   *
   *
   * <pre>
   * The interface ID of the external VPN gateway to which this VPN tunnel is connected. Provided by the client when the VPN tunnel is created.
   * </pre>
   *
   * <code>int32 peer_external_gateway_interface = 184332935;</code>
   *
   * @return The peerExternalGatewayInterface.
   */
  @java.lang.Override
  public int getPeerExternalGatewayInterface() {
    return peerExternalGatewayInterface_;
  }

  public static final int PEER_GCP_GATEWAY_FIELD_NUMBER = 13431996;
  private volatile java.lang.Object peerGcpGateway_;
  /**
   *
   *
   * <pre>
   * URL of the peer side HA GCP VPN gateway to which this VPN tunnel is connected. Provided by the client when the VPN tunnel is created. This field can be used when creating highly available VPN from VPC network to VPC network, the field is exclusive with the field peerExternalGateway. If provided, the VPN tunnel will automatically use the same vpnGatewayInterface ID in the peer GCP VPN gateway.
   * </pre>
   *
   * <code>string peer_gcp_gateway = 13431996;</code>
   *
   * @return The peerGcpGateway.
   */
  @java.lang.Override
  public java.lang.String getPeerGcpGateway() {
    java.lang.Object ref = peerGcpGateway_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      peerGcpGateway_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * URL of the peer side HA GCP VPN gateway to which this VPN tunnel is connected. Provided by the client when the VPN tunnel is created. This field can be used when creating highly available VPN from VPC network to VPC network, the field is exclusive with the field peerExternalGateway. If provided, the VPN tunnel will automatically use the same vpnGatewayInterface ID in the peer GCP VPN gateway.
   * </pre>
   *
   * <code>string peer_gcp_gateway = 13431996;</code>
   *
   * @return The bytes for peerGcpGateway.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getPeerGcpGatewayBytes() {
    java.lang.Object ref = peerGcpGateway_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      peerGcpGateway_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PEER_IP_FIELD_NUMBER = 114814244;
  private volatile java.lang.Object peerIp_;
  /**
   *
   *
   * <pre>
   * IP address of the peer VPN gateway. Only IPv4 is supported.
   * </pre>
   *
   * <code>string peer_ip = 114814244;</code>
   *
   * @return The peerIp.
   */
  @java.lang.Override
  public java.lang.String getPeerIp() {
    java.lang.Object ref = peerIp_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      peerIp_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * IP address of the peer VPN gateway. Only IPv4 is supported.
   * </pre>
   *
   * <code>string peer_ip = 114814244;</code>
   *
   * @return The bytes for peerIp.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getPeerIpBytes() {
    java.lang.Object ref = peerIp_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      peerIp_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int REGION_FIELD_NUMBER = 138946292;
  private volatile java.lang.Object region_;
  /**
   *
   *
   * <pre>
   * [Output Only] URL of the region where the VPN tunnel resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
   * </pre>
   *
   * <code>string region = 138946292;</code>
   *
   * @return The region.
   */
  @java.lang.Override
  public java.lang.String getRegion() {
    java.lang.Object ref = region_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      region_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * [Output Only] URL of the region where the VPN tunnel resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
   * </pre>
   *
   * <code>string region = 138946292;</code>
   *
   * @return The bytes for region.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getRegionBytes() {
    java.lang.Object ref = region_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      region_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int REMOTE_TRAFFIC_SELECTOR_FIELD_NUMBER = 90451642;
  private com.google.protobuf.LazyStringList remoteTrafficSelector_;
  /**
   *
   *
   * <pre>
   * Remote traffic selectors to use when establishing the VPN tunnel with the peer VPN gateway. The value should be a CIDR formatted string, for example: 192.168.0.0/16. The ranges should be disjoint. Only IPv4 is supported.
   * </pre>
   *
   * <code>repeated string remote_traffic_selector = 90451642;</code>
   *
   * @return A list containing the remoteTrafficSelector.
   */
  public com.google.protobuf.ProtocolStringList getRemoteTrafficSelectorList() {
    return remoteTrafficSelector_;
  }
  /**
   *
   *
   * <pre>
   * Remote traffic selectors to use when establishing the VPN tunnel with the peer VPN gateway. The value should be a CIDR formatted string, for example: 192.168.0.0/16. The ranges should be disjoint. Only IPv4 is supported.
   * </pre>
   *
   * <code>repeated string remote_traffic_selector = 90451642;</code>
   *
   * @return The count of remoteTrafficSelector.
   */
  public int getRemoteTrafficSelectorCount() {
    return remoteTrafficSelector_.size();
  }
  /**
   *
   *
   * <pre>
   * Remote traffic selectors to use when establishing the VPN tunnel with the peer VPN gateway. The value should be a CIDR formatted string, for example: 192.168.0.0/16. The ranges should be disjoint. Only IPv4 is supported.
   * </pre>
   *
   * <code>repeated string remote_traffic_selector = 90451642;</code>
   *
   * @param index The index of the element to return.
   * @return The remoteTrafficSelector at the given index.
   */
  public java.lang.String getRemoteTrafficSelector(int index) {
    return remoteTrafficSelector_.get(index);
  }
  /**
   *
   *
   * <pre>
   * Remote traffic selectors to use when establishing the VPN tunnel with the peer VPN gateway. The value should be a CIDR formatted string, for example: 192.168.0.0/16. The ranges should be disjoint. Only IPv4 is supported.
   * </pre>
   *
   * <code>repeated string remote_traffic_selector = 90451642;</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the remoteTrafficSelector at the given index.
   */
  public com.google.protobuf.ByteString getRemoteTrafficSelectorBytes(int index) {
    return remoteTrafficSelector_.getByteString(index);
  }

  public static final int ROUTER_FIELD_NUMBER = 148608841;
  private volatile java.lang.Object router_;
  /**
   *
   *
   * <pre>
   * URL of the router resource to be used for dynamic routing.
   * </pre>
   *
   * <code>string router = 148608841;</code>
   *
   * @return The router.
   */
  @java.lang.Override
  public java.lang.String getRouter() {
    java.lang.Object ref = router_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      router_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * URL of the router resource to be used for dynamic routing.
   * </pre>
   *
   * <code>string router = 148608841;</code>
   *
   * @return The bytes for router.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getRouterBytes() {
    java.lang.Object ref = router_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      router_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SELF_LINK_FIELD_NUMBER = 187779341;
  private volatile java.lang.Object selfLink_;
  /**
   *
   *
   * <pre>
   * [Output Only] Server-defined URL for the resource.
   * </pre>
   *
   * <code>string self_link = 187779341;</code>
   *
   * @return The selfLink.
   */
  @java.lang.Override
  public java.lang.String getSelfLink() {
    java.lang.Object ref = selfLink_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      selfLink_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * [Output Only] Server-defined URL for the resource.
   * </pre>
   *
   * <code>string self_link = 187779341;</code>
   *
   * @return The bytes for selfLink.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getSelfLinkBytes() {
    java.lang.Object ref = selfLink_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      selfLink_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SHARED_SECRET_FIELD_NUMBER = 113497034;
  private volatile java.lang.Object sharedSecret_;
  /**
   *
   *
   * <pre>
   * Shared secret used to set the secure session between the Cloud VPN gateway and the peer VPN gateway.
   * </pre>
   *
   * <code>string shared_secret = 113497034;</code>
   *
   * @return The sharedSecret.
   */
  @java.lang.Override
  public java.lang.String getSharedSecret() {
    java.lang.Object ref = sharedSecret_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      sharedSecret_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Shared secret used to set the secure session between the Cloud VPN gateway and the peer VPN gateway.
   * </pre>
   *
   * <code>string shared_secret = 113497034;</code>
   *
   * @return The bytes for sharedSecret.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getSharedSecretBytes() {
    java.lang.Object ref = sharedSecret_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      sharedSecret_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SHARED_SECRET_HASH_FIELD_NUMBER = 130446435;
  private volatile java.lang.Object sharedSecretHash_;
  /**
   *
   *
   * <pre>
   * Hash of the shared secret.
   * </pre>
   *
   * <code>string shared_secret_hash = 130446435;</code>
   *
   * @return The sharedSecretHash.
   */
  @java.lang.Override
  public java.lang.String getSharedSecretHash() {
    java.lang.Object ref = sharedSecretHash_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      sharedSecretHash_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Hash of the shared secret.
   * </pre>
   *
   * <code>string shared_secret_hash = 130446435;</code>
   *
   * @return The bytes for sharedSecretHash.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getSharedSecretHashBytes() {
    java.lang.Object ref = sharedSecretHash_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      sharedSecretHash_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int STATUS_FIELD_NUMBER = 181260274;
  private int status_;
  /**
   *
   *
   * <pre>
   * [Output Only] The status of the VPN tunnel, which can be one of the following:
   * - PROVISIONING: Resource is being allocated for the VPN tunnel.
   * - WAITING_FOR_FULL_CONFIG: Waiting to receive all VPN-related configs from the user. Network, TargetVpnGateway, VpnTunnel, ForwardingRule, and Route resources are needed to setup the VPN tunnel.
   * - FIRST_HANDSHAKE: Successful first handshake with the peer VPN.
   * - ESTABLISHED: Secure session is successfully established with the peer VPN.
   * - NETWORK_ERROR: Deprecated, replaced by NO_INCOMING_PACKETS
   * - AUTHORIZATION_ERROR: Auth error (for example, bad shared secret).
   * - NEGOTIATION_FAILURE: Handshake failed.
   * - DEPROVISIONING: Resources are being deallocated for the VPN tunnel.
   * - FAILED: Tunnel creation has failed and the tunnel is not ready to be used.
   * - NO_INCOMING_PACKETS: No incoming packets from peer.
   * - REJECTED: Tunnel configuration was rejected, can be result of being blacklisted.
   * - ALLOCATING_RESOURCES: Cloud VPN is in the process of allocating all required resources.
   * - STOPPED: Tunnel is stopped due to its Forwarding Rules being deleted for Classic VPN tunnels or the project is in frozen state.
   * - PEER_IDENTITY_MISMATCH: Peer identity does not match peer IP, probably behind NAT.
   * - TS_NARROWING_NOT_ALLOWED: Traffic selector narrowing not allowed for an HA-VPN tunnel.
   * </pre>
   *
   * <code>.google.cloud.compute.v1.VpnTunnel.Status status = 181260274;</code>
   *
   * @return The enum numeric value on the wire for status.
   */
  @java.lang.Override
  public int getStatusValue() {
    return status_;
  }
  /**
   *
   *
   * <pre>
   * [Output Only] The status of the VPN tunnel, which can be one of the following:
   * - PROVISIONING: Resource is being allocated for the VPN tunnel.
   * - WAITING_FOR_FULL_CONFIG: Waiting to receive all VPN-related configs from the user. Network, TargetVpnGateway, VpnTunnel, ForwardingRule, and Route resources are needed to setup the VPN tunnel.
   * - FIRST_HANDSHAKE: Successful first handshake with the peer VPN.
   * - ESTABLISHED: Secure session is successfully established with the peer VPN.
   * - NETWORK_ERROR: Deprecated, replaced by NO_INCOMING_PACKETS
   * - AUTHORIZATION_ERROR: Auth error (for example, bad shared secret).
   * - NEGOTIATION_FAILURE: Handshake failed.
   * - DEPROVISIONING: Resources are being deallocated for the VPN tunnel.
   * - FAILED: Tunnel creation has failed and the tunnel is not ready to be used.
   * - NO_INCOMING_PACKETS: No incoming packets from peer.
   * - REJECTED: Tunnel configuration was rejected, can be result of being blacklisted.
   * - ALLOCATING_RESOURCES: Cloud VPN is in the process of allocating all required resources.
   * - STOPPED: Tunnel is stopped due to its Forwarding Rules being deleted for Classic VPN tunnels or the project is in frozen state.
   * - PEER_IDENTITY_MISMATCH: Peer identity does not match peer IP, probably behind NAT.
   * - TS_NARROWING_NOT_ALLOWED: Traffic selector narrowing not allowed for an HA-VPN tunnel.
   * </pre>
   *
   * <code>.google.cloud.compute.v1.VpnTunnel.Status status = 181260274;</code>
   *
   * @return The status.
   */
  @java.lang.Override
  public com.google.cloud.compute.v1.VpnTunnel.Status getStatus() {
    @SuppressWarnings("deprecation")
    com.google.cloud.compute.v1.VpnTunnel.Status result =
        com.google.cloud.compute.v1.VpnTunnel.Status.valueOf(status_);
    return result == null ? com.google.cloud.compute.v1.VpnTunnel.Status.UNRECOGNIZED : result;
  }

  public static final int TARGET_VPN_GATEWAY_FIELD_NUMBER = 264077387;
  private volatile java.lang.Object targetVpnGateway_;
  /**
   *
   *
   * <pre>
   * URL of the Target VPN gateway with which this VPN tunnel is associated. Provided by the client when the VPN tunnel is created.
   * </pre>
   *
   * <code>string target_vpn_gateway = 264077387;</code>
   *
   * @return The targetVpnGateway.
   */
  @java.lang.Override
  public java.lang.String getTargetVpnGateway() {
    java.lang.Object ref = targetVpnGateway_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      targetVpnGateway_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * URL of the Target VPN gateway with which this VPN tunnel is associated. Provided by the client when the VPN tunnel is created.
   * </pre>
   *
   * <code>string target_vpn_gateway = 264077387;</code>
   *
   * @return The bytes for targetVpnGateway.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getTargetVpnGatewayBytes() {
    java.lang.Object ref = targetVpnGateway_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      targetVpnGateway_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int VPN_GATEWAY_FIELD_NUMBER = 138248697;
  private volatile java.lang.Object vpnGateway_;
  /**
   *
   *
   * <pre>
   * URL of the VPN gateway with which this VPN tunnel is associated. Provided by the client when the VPN tunnel is created. This must be used (instead of target_vpn_gateway) if a High Availability VPN gateway resource is created.
   * </pre>
   *
   * <code>string vpn_gateway = 138248697;</code>
   *
   * @return The vpnGateway.
   */
  @java.lang.Override
  public java.lang.String getVpnGateway() {
    java.lang.Object ref = vpnGateway_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      vpnGateway_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * URL of the VPN gateway with which this VPN tunnel is associated. Provided by the client when the VPN tunnel is created. This must be used (instead of target_vpn_gateway) if a High Availability VPN gateway resource is created.
   * </pre>
   *
   * <code>string vpn_gateway = 138248697;</code>
   *
   * @return The bytes for vpnGateway.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getVpnGatewayBytes() {
    java.lang.Object ref = vpnGateway_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      vpnGateway_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int VPN_GATEWAY_INTERFACE_FIELD_NUMBER = 95979123;
  private int vpnGatewayInterface_;
  /**
   *
   *
   * <pre>
   * The interface ID of the VPN gateway with which this VPN tunnel is associated.
   * </pre>
   *
   * <code>int32 vpn_gateway_interface = 95979123;</code>
   *
   * @return The vpnGatewayInterface.
   */
  @java.lang.Override
  public int getVpnGatewayInterface() {
    return vpnGatewayInterface_;
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (!getIdBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3355, id_);
    }
    if (!getKindBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3292052, kind_);
    }
    if (!getNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3373707, name_);
    }
    if (!getPeerGcpGatewayBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 13431996, peerGcpGateway_);
    }
    if (!getCreationTimestampBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 30525366, creationTimestamp_);
    }
    for (int i = 0; i < localTrafficSelector_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(
          output, 48879157, localTrafficSelector_.getRaw(i));
    }
    if (!getDetailedStatusBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 65065569, detailedStatus_);
    }
    for (int i = 0; i < remoteTrafficSelector_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(
          output, 90451642, remoteTrafficSelector_.getRaw(i));
    }
    if (vpnGatewayInterface_ != 0) {
      output.writeInt32(95979123, vpnGatewayInterface_);
    }
    if (!getSharedSecretBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 113497034, sharedSecret_);
    }
    if (!getPeerIpBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 114814244, peerIp_);
    }
    if (!getPeerExternalGatewayBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 116520717, peerExternalGateway_);
    }
    if (!getSharedSecretHashBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 130446435, sharedSecretHash_);
    }
    if (!getVpnGatewayBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 138248697, vpnGateway_);
    }
    if (!getRegionBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 138946292, region_);
    }
    if (!getRouterBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 148608841, router_);
    }
    if (!getDescriptionBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 154502140, description_);
    }
    if (status_ != com.google.cloud.compute.v1.VpnTunnel.Status.UNDEFINED_STATUS.getNumber()) {
      output.writeEnum(181260274, status_);
    }
    if (peerExternalGatewayInterface_ != 0) {
      output.writeInt32(184332935, peerExternalGatewayInterface_);
    }
    if (!getSelfLinkBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 187779341, selfLink_);
    }
    if (ikeVersion_ != 0) {
      output.writeInt32(218376220, ikeVersion_);
    }
    if (!getTargetVpnGatewayBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 264077387, targetVpnGateway_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getIdBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3355, id_);
    }
    if (!getKindBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3292052, kind_);
    }
    if (!getNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3373707, name_);
    }
    if (!getPeerGcpGatewayBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(13431996, peerGcpGateway_);
    }
    if (!getCreationTimestampBytes().isEmpty()) {
      size +=
          com.google.protobuf.GeneratedMessageV3.computeStringSize(30525366, creationTimestamp_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < localTrafficSelector_.size(); i++) {
        dataSize += computeStringSizeNoTag(localTrafficSelector_.getRaw(i));
      }
      size += dataSize;
      size += 5 * getLocalTrafficSelectorList().size();
    }
    if (!getDetailedStatusBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(65065569, detailedStatus_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < remoteTrafficSelector_.size(); i++) {
        dataSize += computeStringSizeNoTag(remoteTrafficSelector_.getRaw(i));
      }
      size += dataSize;
      size += 5 * getRemoteTrafficSelectorList().size();
    }
    if (vpnGatewayInterface_ != 0) {
      size +=
          com.google.protobuf.CodedOutputStream.computeInt32Size(95979123, vpnGatewayInterface_);
    }
    if (!getSharedSecretBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(113497034, sharedSecret_);
    }
    if (!getPeerIpBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(114814244, peerIp_);
    }
    if (!getPeerExternalGatewayBytes().isEmpty()) {
      size +=
          com.google.protobuf.GeneratedMessageV3.computeStringSize(116520717, peerExternalGateway_);
    }
    if (!getSharedSecretHashBytes().isEmpty()) {
      size +=
          com.google.protobuf.GeneratedMessageV3.computeStringSize(130446435, sharedSecretHash_);
    }
    if (!getVpnGatewayBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(138248697, vpnGateway_);
    }
    if (!getRegionBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(138946292, region_);
    }
    if (!getRouterBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(148608841, router_);
    }
    if (!getDescriptionBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(154502140, description_);
    }
    if (status_ != com.google.cloud.compute.v1.VpnTunnel.Status.UNDEFINED_STATUS.getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(181260274, status_);
    }
    if (peerExternalGatewayInterface_ != 0) {
      size +=
          com.google.protobuf.CodedOutputStream.computeInt32Size(
              184332935, peerExternalGatewayInterface_);
    }
    if (!getSelfLinkBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(187779341, selfLink_);
    }
    if (ikeVersion_ != 0) {
      size += com.google.protobuf.CodedOutputStream.computeInt32Size(218376220, ikeVersion_);
    }
    if (!getTargetVpnGatewayBytes().isEmpty()) {
      size +=
          com.google.protobuf.GeneratedMessageV3.computeStringSize(264077387, targetVpnGateway_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.compute.v1.VpnTunnel)) {
      return super.equals(obj);
    }
    com.google.cloud.compute.v1.VpnTunnel other = (com.google.cloud.compute.v1.VpnTunnel) obj;

    if (!getCreationTimestamp().equals(other.getCreationTimestamp())) return false;
    if (!getDescription().equals(other.getDescription())) return false;
    if (!getDetailedStatus().equals(other.getDetailedStatus())) return false;
    if (!getId().equals(other.getId())) return false;
    if (getIkeVersion() != other.getIkeVersion()) return false;
    if (!getKind().equals(other.getKind())) return false;
    if (!getLocalTrafficSelectorList().equals(other.getLocalTrafficSelectorList())) return false;
    if (!getName().equals(other.getName())) return false;
    if (!getPeerExternalGateway().equals(other.getPeerExternalGateway())) return false;
    if (getPeerExternalGatewayInterface() != other.getPeerExternalGatewayInterface()) return false;
    if (!getPeerGcpGateway().equals(other.getPeerGcpGateway())) return false;
    if (!getPeerIp().equals(other.getPeerIp())) return false;
    if (!getRegion().equals(other.getRegion())) return false;
    if (!getRemoteTrafficSelectorList().equals(other.getRemoteTrafficSelectorList())) return false;
    if (!getRouter().equals(other.getRouter())) return false;
    if (!getSelfLink().equals(other.getSelfLink())) return false;
    if (!getSharedSecret().equals(other.getSharedSecret())) return false;
    if (!getSharedSecretHash().equals(other.getSharedSecretHash())) return false;
    if (status_ != other.status_) return false;
    if (!getTargetVpnGateway().equals(other.getTargetVpnGateway())) return false;
    if (!getVpnGateway().equals(other.getVpnGateway())) return false;
    if (getVpnGatewayInterface() != other.getVpnGatewayInterface()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + CREATION_TIMESTAMP_FIELD_NUMBER;
    hash = (53 * hash) + getCreationTimestamp().hashCode();
    hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
    hash = (53 * hash) + getDescription().hashCode();
    hash = (37 * hash) + DETAILED_STATUS_FIELD_NUMBER;
    hash = (53 * hash) + getDetailedStatus().hashCode();
    hash = (37 * hash) + ID_FIELD_NUMBER;
    hash = (53 * hash) + getId().hashCode();
    hash = (37 * hash) + IKE_VERSION_FIELD_NUMBER;
    hash = (53 * hash) + getIkeVersion();
    hash = (37 * hash) + KIND_FIELD_NUMBER;
    hash = (53 * hash) + getKind().hashCode();
    if (getLocalTrafficSelectorCount() > 0) {
      hash = (37 * hash) + LOCAL_TRAFFIC_SELECTOR_FIELD_NUMBER;
      hash = (53 * hash) + getLocalTrafficSelectorList().hashCode();
    }
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    hash = (37 * hash) + PEER_EXTERNAL_GATEWAY_FIELD_NUMBER;
    hash = (53 * hash) + getPeerExternalGateway().hashCode();
    hash = (37 * hash) + PEER_EXTERNAL_GATEWAY_INTERFACE_FIELD_NUMBER;
    hash = (53 * hash) + getPeerExternalGatewayInterface();
    hash = (37 * hash) + PEER_GCP_GATEWAY_FIELD_NUMBER;
    hash = (53 * hash) + getPeerGcpGateway().hashCode();
    hash = (37 * hash) + PEER_IP_FIELD_NUMBER;
    hash = (53 * hash) + getPeerIp().hashCode();
    hash = (37 * hash) + REGION_FIELD_NUMBER;
    hash = (53 * hash) + getRegion().hashCode();
    if (getRemoteTrafficSelectorCount() > 0) {
      hash = (37 * hash) + REMOTE_TRAFFIC_SELECTOR_FIELD_NUMBER;
      hash = (53 * hash) + getRemoteTrafficSelectorList().hashCode();
    }
    hash = (37 * hash) + ROUTER_FIELD_NUMBER;
    hash = (53 * hash) + getRouter().hashCode();
    hash = (37 * hash) + SELF_LINK_FIELD_NUMBER;
    hash = (53 * hash) + getSelfLink().hashCode();
    hash = (37 * hash) + SHARED_SECRET_FIELD_NUMBER;
    hash = (53 * hash) + getSharedSecret().hashCode();
    hash = (37 * hash) + SHARED_SECRET_HASH_FIELD_NUMBER;
    hash = (53 * hash) + getSharedSecretHash().hashCode();
    hash = (37 * hash) + STATUS_FIELD_NUMBER;
    hash = (53 * hash) + status_;
    hash = (37 * hash) + TARGET_VPN_GATEWAY_FIELD_NUMBER;
    hash = (53 * hash) + getTargetVpnGateway().hashCode();
    hash = (37 * hash) + VPN_GATEWAY_FIELD_NUMBER;
    hash = (53 * hash) + getVpnGateway().hashCode();
    hash = (37 * hash) + VPN_GATEWAY_INTERFACE_FIELD_NUMBER;
    hash = (53 * hash) + getVpnGatewayInterface();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.compute.v1.VpnTunnel parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.compute.v1.VpnTunnel parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.compute.v1.VpnTunnel parseFrom(com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.compute.v1.VpnTunnel parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.compute.v1.VpnTunnel parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.compute.v1.VpnTunnel parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.compute.v1.VpnTunnel parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.compute.v1.VpnTunnel parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.compute.v1.VpnTunnel parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.compute.v1.VpnTunnel parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.compute.v1.VpnTunnel parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.compute.v1.VpnTunnel parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.cloud.compute.v1.VpnTunnel prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Represents a Cloud VPN Tunnel resource.
   * For more information about VPN, read the  the Cloud VPN Overview. (== resource_for {$api_version}.vpnTunnels ==)
   * </pre>
   *
   * Protobuf type {@code google.cloud.compute.v1.VpnTunnel}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.compute.v1.VpnTunnel)
      com.google.cloud.compute.v1.VpnTunnelOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.compute.v1.Compute
          .internal_static_google_cloud_compute_v1_VpnTunnel_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.compute.v1.Compute
          .internal_static_google_cloud_compute_v1_VpnTunnel_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.compute.v1.VpnTunnel.class,
              com.google.cloud.compute.v1.VpnTunnel.Builder.class);
    }

    // Construct using com.google.cloud.compute.v1.VpnTunnel.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {}
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      creationTimestamp_ = "";

      description_ = "";

      detailedStatus_ = "";

      id_ = "";

      ikeVersion_ = 0;

      kind_ = "";

      localTrafficSelector_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      name_ = "";

      peerExternalGateway_ = "";

      peerExternalGatewayInterface_ = 0;

      peerGcpGateway_ = "";

      peerIp_ = "";

      region_ = "";

      remoteTrafficSelector_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000002);
      router_ = "";

      selfLink_ = "";

      sharedSecret_ = "";

      sharedSecretHash_ = "";

      status_ = 0;

      targetVpnGateway_ = "";

      vpnGateway_ = "";

      vpnGatewayInterface_ = 0;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.compute.v1.Compute
          .internal_static_google_cloud_compute_v1_VpnTunnel_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.compute.v1.VpnTunnel getDefaultInstanceForType() {
      return com.google.cloud.compute.v1.VpnTunnel.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.compute.v1.VpnTunnel build() {
      com.google.cloud.compute.v1.VpnTunnel result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.compute.v1.VpnTunnel buildPartial() {
      com.google.cloud.compute.v1.VpnTunnel result =
          new com.google.cloud.compute.v1.VpnTunnel(this);
      int from_bitField0_ = bitField0_;
      result.creationTimestamp_ = creationTimestamp_;
      result.description_ = description_;
      result.detailedStatus_ = detailedStatus_;
      result.id_ = id_;
      result.ikeVersion_ = ikeVersion_;
      result.kind_ = kind_;
      if (((bitField0_ & 0x00000001) != 0)) {
        localTrafficSelector_ = localTrafficSelector_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.localTrafficSelector_ = localTrafficSelector_;
      result.name_ = name_;
      result.peerExternalGateway_ = peerExternalGateway_;
      result.peerExternalGatewayInterface_ = peerExternalGatewayInterface_;
      result.peerGcpGateway_ = peerGcpGateway_;
      result.peerIp_ = peerIp_;
      result.region_ = region_;
      if (((bitField0_ & 0x00000002) != 0)) {
        remoteTrafficSelector_ = remoteTrafficSelector_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000002);
      }
      result.remoteTrafficSelector_ = remoteTrafficSelector_;
      result.router_ = router_;
      result.selfLink_ = selfLink_;
      result.sharedSecret_ = sharedSecret_;
      result.sharedSecretHash_ = sharedSecretHash_;
      result.status_ = status_;
      result.targetVpnGateway_ = targetVpnGateway_;
      result.vpnGateway_ = vpnGateway_;
      result.vpnGatewayInterface_ = vpnGatewayInterface_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.compute.v1.VpnTunnel) {
        return mergeFrom((com.google.cloud.compute.v1.VpnTunnel) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.compute.v1.VpnTunnel other) {
      if (other == com.google.cloud.compute.v1.VpnTunnel.getDefaultInstance()) return this;
      if (!other.getCreationTimestamp().isEmpty()) {
        creationTimestamp_ = other.creationTimestamp_;
        onChanged();
      }
      if (!other.getDescription().isEmpty()) {
        description_ = other.description_;
        onChanged();
      }
      if (!other.getDetailedStatus().isEmpty()) {
        detailedStatus_ = other.detailedStatus_;
        onChanged();
      }
      if (!other.getId().isEmpty()) {
        id_ = other.id_;
        onChanged();
      }
      if (other.getIkeVersion() != 0) {
        setIkeVersion(other.getIkeVersion());
      }
      if (!other.getKind().isEmpty()) {
        kind_ = other.kind_;
        onChanged();
      }
      if (!other.localTrafficSelector_.isEmpty()) {
        if (localTrafficSelector_.isEmpty()) {
          localTrafficSelector_ = other.localTrafficSelector_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureLocalTrafficSelectorIsMutable();
          localTrafficSelector_.addAll(other.localTrafficSelector_);
        }
        onChanged();
      }
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        onChanged();
      }
      if (!other.getPeerExternalGateway().isEmpty()) {
        peerExternalGateway_ = other.peerExternalGateway_;
        onChanged();
      }
      if (other.getPeerExternalGatewayInterface() != 0) {
        setPeerExternalGatewayInterface(other.getPeerExternalGatewayInterface());
      }
      if (!other.getPeerGcpGateway().isEmpty()) {
        peerGcpGateway_ = other.peerGcpGateway_;
        onChanged();
      }
      if (!other.getPeerIp().isEmpty()) {
        peerIp_ = other.peerIp_;
        onChanged();
      }
      if (!other.getRegion().isEmpty()) {
        region_ = other.region_;
        onChanged();
      }
      if (!other.remoteTrafficSelector_.isEmpty()) {
        if (remoteTrafficSelector_.isEmpty()) {
          remoteTrafficSelector_ = other.remoteTrafficSelector_;
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          ensureRemoteTrafficSelectorIsMutable();
          remoteTrafficSelector_.addAll(other.remoteTrafficSelector_);
        }
        onChanged();
      }
      if (!other.getRouter().isEmpty()) {
        router_ = other.router_;
        onChanged();
      }
      if (!other.getSelfLink().isEmpty()) {
        selfLink_ = other.selfLink_;
        onChanged();
      }
      if (!other.getSharedSecret().isEmpty()) {
        sharedSecret_ = other.sharedSecret_;
        onChanged();
      }
      if (!other.getSharedSecretHash().isEmpty()) {
        sharedSecretHash_ = other.sharedSecretHash_;
        onChanged();
      }
      if (other.status_ != 0) {
        setStatusValue(other.getStatusValue());
      }
      if (!other.getTargetVpnGateway().isEmpty()) {
        targetVpnGateway_ = other.targetVpnGateway_;
        onChanged();
      }
      if (!other.getVpnGateway().isEmpty()) {
        vpnGateway_ = other.vpnGateway_;
        onChanged();
      }
      if (other.getVpnGatewayInterface() != 0) {
        setVpnGatewayInterface(other.getVpnGatewayInterface());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.cloud.compute.v1.VpnTunnel parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.cloud.compute.v1.VpnTunnel) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int bitField0_;

    private java.lang.Object creationTimestamp_ = "";
    /**
     *
     *
     * <pre>
     * [Output Only] Creation timestamp in RFC3339 text format.
     * </pre>
     *
     * <code>string creation_timestamp = 30525366;</code>
     *
     * @return The creationTimestamp.
     */
    public java.lang.String getCreationTimestamp() {
      java.lang.Object ref = creationTimestamp_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        creationTimestamp_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * [Output Only] Creation timestamp in RFC3339 text format.
     * </pre>
     *
     * <code>string creation_timestamp = 30525366;</code>
     *
     * @return The bytes for creationTimestamp.
     */
    public com.google.protobuf.ByteString getCreationTimestampBytes() {
      java.lang.Object ref = creationTimestamp_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        creationTimestamp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * [Output Only] Creation timestamp in RFC3339 text format.
     * </pre>
     *
     * <code>string creation_timestamp = 30525366;</code>
     *
     * @param value The creationTimestamp to set.
     * @return This builder for chaining.
     */
    public Builder setCreationTimestamp(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      creationTimestamp_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * [Output Only] Creation timestamp in RFC3339 text format.
     * </pre>
     *
     * <code>string creation_timestamp = 30525366;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearCreationTimestamp() {

      creationTimestamp_ = getDefaultInstance().getCreationTimestamp();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * [Output Only] Creation timestamp in RFC3339 text format.
     * </pre>
     *
     * <code>string creation_timestamp = 30525366;</code>
     *
     * @param value The bytes for creationTimestamp to set.
     * @return This builder for chaining.
     */
    public Builder setCreationTimestampBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      creationTimestamp_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object description_ = "";
    /**
     *
     *
     * <pre>
     * An optional description of this resource. Provide this property when you create the resource.
     * </pre>
     *
     * <code>string description = 154502140;</code>
     *
     * @return The description.
     */
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * An optional description of this resource. Provide this property when you create the resource.
     * </pre>
     *
     * <code>string description = 154502140;</code>
     *
     * @return The bytes for description.
     */
    public com.google.protobuf.ByteString getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * An optional description of this resource. Provide this property when you create the resource.
     * </pre>
     *
     * <code>string description = 154502140;</code>
     *
     * @param value The description to set.
     * @return This builder for chaining.
     */
    public Builder setDescription(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      description_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * An optional description of this resource. Provide this property when you create the resource.
     * </pre>
     *
     * <code>string description = 154502140;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearDescription() {

      description_ = getDefaultInstance().getDescription();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * An optional description of this resource. Provide this property when you create the resource.
     * </pre>
     *
     * <code>string description = 154502140;</code>
     *
     * @param value The bytes for description to set.
     * @return This builder for chaining.
     */
    public Builder setDescriptionBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      description_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object detailedStatus_ = "";
    /**
     *
     *
     * <pre>
     * [Output Only] Detailed status message for the VPN tunnel.
     * </pre>
     *
     * <code>string detailed_status = 65065569;</code>
     *
     * @return The detailedStatus.
     */
    public java.lang.String getDetailedStatus() {
      java.lang.Object ref = detailedStatus_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        detailedStatus_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * [Output Only] Detailed status message for the VPN tunnel.
     * </pre>
     *
     * <code>string detailed_status = 65065569;</code>
     *
     * @return The bytes for detailedStatus.
     */
    public com.google.protobuf.ByteString getDetailedStatusBytes() {
      java.lang.Object ref = detailedStatus_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        detailedStatus_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * [Output Only] Detailed status message for the VPN tunnel.
     * </pre>
     *
     * <code>string detailed_status = 65065569;</code>
     *
     * @param value The detailedStatus to set.
     * @return This builder for chaining.
     */
    public Builder setDetailedStatus(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      detailedStatus_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * [Output Only] Detailed status message for the VPN tunnel.
     * </pre>
     *
     * <code>string detailed_status = 65065569;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearDetailedStatus() {

      detailedStatus_ = getDefaultInstance().getDetailedStatus();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * [Output Only] Detailed status message for the VPN tunnel.
     * </pre>
     *
     * <code>string detailed_status = 65065569;</code>
     *
     * @param value The bytes for detailedStatus to set.
     * @return This builder for chaining.
     */
    public Builder setDetailedStatusBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      detailedStatus_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object id_ = "";
    /**
     *
     *
     * <pre>
     * [Output Only] The unique identifier for the resource. This identifier is defined by the server.
     * </pre>
     *
     * <code>string id = 3355;</code>
     *
     * @return The id.
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * [Output Only] The unique identifier for the resource. This identifier is defined by the server.
     * </pre>
     *
     * <code>string id = 3355;</code>
     *
     * @return The bytes for id.
     */
    public com.google.protobuf.ByteString getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * [Output Only] The unique identifier for the resource. This identifier is defined by the server.
     * </pre>
     *
     * <code>string id = 3355;</code>
     *
     * @param value The id to set.
     * @return This builder for chaining.
     */
    public Builder setId(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      id_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * [Output Only] The unique identifier for the resource. This identifier is defined by the server.
     * </pre>
     *
     * <code>string id = 3355;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearId() {

      id_ = getDefaultInstance().getId();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * [Output Only] The unique identifier for the resource. This identifier is defined by the server.
     * </pre>
     *
     * <code>string id = 3355;</code>
     *
     * @param value The bytes for id to set.
     * @return This builder for chaining.
     */
    public Builder setIdBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      id_ = value;
      onChanged();
      return this;
    }

    private int ikeVersion_;
    /**
     *
     *
     * <pre>
     * IKE protocol version to use when establishing the VPN tunnel with the peer VPN gateway. Acceptable IKE versions are 1 or 2. The default version is 2.
     * </pre>
     *
     * <code>int32 ike_version = 218376220;</code>
     *
     * @return The ikeVersion.
     */
    @java.lang.Override
    public int getIkeVersion() {
      return ikeVersion_;
    }
    /**
     *
     *
     * <pre>
     * IKE protocol version to use when establishing the VPN tunnel with the peer VPN gateway. Acceptable IKE versions are 1 or 2. The default version is 2.
     * </pre>
     *
     * <code>int32 ike_version = 218376220;</code>
     *
     * @param value The ikeVersion to set.
     * @return This builder for chaining.
     */
    public Builder setIkeVersion(int value) {

      ikeVersion_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * IKE protocol version to use when establishing the VPN tunnel with the peer VPN gateway. Acceptable IKE versions are 1 or 2. The default version is 2.
     * </pre>
     *
     * <code>int32 ike_version = 218376220;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearIkeVersion() {

      ikeVersion_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object kind_ = "";
    /**
     *
     *
     * <pre>
     * [Output Only] Type of resource. Always compute#vpnTunnel for VPN tunnels.
     * </pre>
     *
     * <code>string kind = 3292052;</code>
     *
     * @return The kind.
     */
    public java.lang.String getKind() {
      java.lang.Object ref = kind_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        kind_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * [Output Only] Type of resource. Always compute#vpnTunnel for VPN tunnels.
     * </pre>
     *
     * <code>string kind = 3292052;</code>
     *
     * @return The bytes for kind.
     */
    public com.google.protobuf.ByteString getKindBytes() {
      java.lang.Object ref = kind_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        kind_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * [Output Only] Type of resource. Always compute#vpnTunnel for VPN tunnels.
     * </pre>
     *
     * <code>string kind = 3292052;</code>
     *
     * @param value The kind to set.
     * @return This builder for chaining.
     */
    public Builder setKind(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      kind_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * [Output Only] Type of resource. Always compute#vpnTunnel for VPN tunnels.
     * </pre>
     *
     * <code>string kind = 3292052;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearKind() {

      kind_ = getDefaultInstance().getKind();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * [Output Only] Type of resource. Always compute#vpnTunnel for VPN tunnels.
     * </pre>
     *
     * <code>string kind = 3292052;</code>
     *
     * @param value The bytes for kind to set.
     * @return This builder for chaining.
     */
    public Builder setKindBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      kind_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList localTrafficSelector_ =
        com.google.protobuf.LazyStringArrayList.EMPTY;

    private void ensureLocalTrafficSelectorIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        localTrafficSelector_ = new com.google.protobuf.LazyStringArrayList(localTrafficSelector_);
        bitField0_ |= 0x00000001;
      }
    }
    /**
     *
     *
     * <pre>
     * Local traffic selector to use when establishing the VPN tunnel with the peer VPN gateway. The value should be a CIDR formatted string, for example: 192.168.0.0/16. The ranges must be disjoint. Only IPv4 is supported.
     * </pre>
     *
     * <code>repeated string local_traffic_selector = 48879157;</code>
     *
     * @return A list containing the localTrafficSelector.
     */
    public com.google.protobuf.ProtocolStringList getLocalTrafficSelectorList() {
      return localTrafficSelector_.getUnmodifiableView();
    }
    /**
     *
     *
     * <pre>
     * Local traffic selector to use when establishing the VPN tunnel with the peer VPN gateway. The value should be a CIDR formatted string, for example: 192.168.0.0/16. The ranges must be disjoint. Only IPv4 is supported.
     * </pre>
     *
     * <code>repeated string local_traffic_selector = 48879157;</code>
     *
     * @return The count of localTrafficSelector.
     */
    public int getLocalTrafficSelectorCount() {
      return localTrafficSelector_.size();
    }
    /**
     *
     *
     * <pre>
     * Local traffic selector to use when establishing the VPN tunnel with the peer VPN gateway. The value should be a CIDR formatted string, for example: 192.168.0.0/16. The ranges must be disjoint. Only IPv4 is supported.
     * </pre>
     *
     * <code>repeated string local_traffic_selector = 48879157;</code>
     *
     * @param index The index of the element to return.
     * @return The localTrafficSelector at the given index.
     */
    public java.lang.String getLocalTrafficSelector(int index) {
      return localTrafficSelector_.get(index);
    }
    /**
     *
     *
     * <pre>
     * Local traffic selector to use when establishing the VPN tunnel with the peer VPN gateway. The value should be a CIDR formatted string, for example: 192.168.0.0/16. The ranges must be disjoint. Only IPv4 is supported.
     * </pre>
     *
     * <code>repeated string local_traffic_selector = 48879157;</code>
     *
     * @param index The index of the value to return.
     * @return The bytes of the localTrafficSelector at the given index.
     */
    public com.google.protobuf.ByteString getLocalTrafficSelectorBytes(int index) {
      return localTrafficSelector_.getByteString(index);
    }
    /**
     *
     *
     * <pre>
     * Local traffic selector to use when establishing the VPN tunnel with the peer VPN gateway. The value should be a CIDR formatted string, for example: 192.168.0.0/16. The ranges must be disjoint. Only IPv4 is supported.
     * </pre>
     *
     * <code>repeated string local_traffic_selector = 48879157;</code>
     *
     * @param index The index to set the value at.
     * @param value The localTrafficSelector to set.
     * @return This builder for chaining.
     */
    public Builder setLocalTrafficSelector(int index, java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureLocalTrafficSelectorIsMutable();
      localTrafficSelector_.set(index, value);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Local traffic selector to use when establishing the VPN tunnel with the peer VPN gateway. The value should be a CIDR formatted string, for example: 192.168.0.0/16. The ranges must be disjoint. Only IPv4 is supported.
     * </pre>
     *
     * <code>repeated string local_traffic_selector = 48879157;</code>
     *
     * @param value The localTrafficSelector to add.
     * @return This builder for chaining.
     */
    public Builder addLocalTrafficSelector(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureLocalTrafficSelectorIsMutable();
      localTrafficSelector_.add(value);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Local traffic selector to use when establishing the VPN tunnel with the peer VPN gateway. The value should be a CIDR formatted string, for example: 192.168.0.0/16. The ranges must be disjoint. Only IPv4 is supported.
     * </pre>
     *
     * <code>repeated string local_traffic_selector = 48879157;</code>
     *
     * @param values The localTrafficSelector to add.
     * @return This builder for chaining.
     */
    public Builder addAllLocalTrafficSelector(java.lang.Iterable<java.lang.String> values) {
      ensureLocalTrafficSelectorIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(values, localTrafficSelector_);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Local traffic selector to use when establishing the VPN tunnel with the peer VPN gateway. The value should be a CIDR formatted string, for example: 192.168.0.0/16. The ranges must be disjoint. Only IPv4 is supported.
     * </pre>
     *
     * <code>repeated string local_traffic_selector = 48879157;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearLocalTrafficSelector() {
      localTrafficSelector_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Local traffic selector to use when establishing the VPN tunnel with the peer VPN gateway. The value should be a CIDR formatted string, for example: 192.168.0.0/16. The ranges must be disjoint. Only IPv4 is supported.
     * </pre>
     *
     * <code>repeated string local_traffic_selector = 48879157;</code>
     *
     * @param value The bytes of the localTrafficSelector to add.
     * @return This builder for chaining.
     */
    public Builder addLocalTrafficSelectorBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      ensureLocalTrafficSelectorIsMutable();
      localTrafficSelector_.add(value);
      onChanged();
      return this;
    }

    private java.lang.Object name_ = "";
    /**
     *
     *
     * <pre>
     * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     * </pre>
     *
     * <code>string name = 3373707;</code>
     *
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     * </pre>
     *
     * <code>string name = 3373707;</code>
     *
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     * </pre>
     *
     * <code>string name = 3373707;</code>
     *
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      name_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     * </pre>
     *
     * <code>string name = 3373707;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearName() {

      name_ = getDefaultInstance().getName();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     * </pre>
     *
     * <code>string name = 3373707;</code>
     *
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      name_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object peerExternalGateway_ = "";
    /**
     *
     *
     * <pre>
     * URL of the peer side external VPN gateway to which this VPN tunnel is connected. Provided by the client when the VPN tunnel is created. This field is exclusive with the field peerGcpGateway.
     * </pre>
     *
     * <code>string peer_external_gateway = 116520717;</code>
     *
     * @return The peerExternalGateway.
     */
    public java.lang.String getPeerExternalGateway() {
      java.lang.Object ref = peerExternalGateway_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        peerExternalGateway_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * URL of the peer side external VPN gateway to which this VPN tunnel is connected. Provided by the client when the VPN tunnel is created. This field is exclusive with the field peerGcpGateway.
     * </pre>
     *
     * <code>string peer_external_gateway = 116520717;</code>
     *
     * @return The bytes for peerExternalGateway.
     */
    public com.google.protobuf.ByteString getPeerExternalGatewayBytes() {
      java.lang.Object ref = peerExternalGateway_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        peerExternalGateway_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * URL of the peer side external VPN gateway to which this VPN tunnel is connected. Provided by the client when the VPN tunnel is created. This field is exclusive with the field peerGcpGateway.
     * </pre>
     *
     * <code>string peer_external_gateway = 116520717;</code>
     *
     * @param value The peerExternalGateway to set.
     * @return This builder for chaining.
     */
    public Builder setPeerExternalGateway(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      peerExternalGateway_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * URL of the peer side external VPN gateway to which this VPN tunnel is connected. Provided by the client when the VPN tunnel is created. This field is exclusive with the field peerGcpGateway.
     * </pre>
     *
     * <code>string peer_external_gateway = 116520717;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearPeerExternalGateway() {

      peerExternalGateway_ = getDefaultInstance().getPeerExternalGateway();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * URL of the peer side external VPN gateway to which this VPN tunnel is connected. Provided by the client when the VPN tunnel is created. This field is exclusive with the field peerGcpGateway.
     * </pre>
     *
     * <code>string peer_external_gateway = 116520717;</code>
     *
     * @param value The bytes for peerExternalGateway to set.
     * @return This builder for chaining.
     */
    public Builder setPeerExternalGatewayBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      peerExternalGateway_ = value;
      onChanged();
      return this;
    }

    private int peerExternalGatewayInterface_;
    /**
     *
     *
     * <pre>
     * The interface ID of the external VPN gateway to which this VPN tunnel is connected. Provided by the client when the VPN tunnel is created.
     * </pre>
     *
     * <code>int32 peer_external_gateway_interface = 184332935;</code>
     *
     * @return The peerExternalGatewayInterface.
     */
    @java.lang.Override
    public int getPeerExternalGatewayInterface() {
      return peerExternalGatewayInterface_;
    }
    /**
     *
     *
     * <pre>
     * The interface ID of the external VPN gateway to which this VPN tunnel is connected. Provided by the client when the VPN tunnel is created.
     * </pre>
     *
     * <code>int32 peer_external_gateway_interface = 184332935;</code>
     *
     * @param value The peerExternalGatewayInterface to set.
     * @return This builder for chaining.
     */
    public Builder setPeerExternalGatewayInterface(int value) {

      peerExternalGatewayInterface_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The interface ID of the external VPN gateway to which this VPN tunnel is connected. Provided by the client when the VPN tunnel is created.
     * </pre>
     *
     * <code>int32 peer_external_gateway_interface = 184332935;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearPeerExternalGatewayInterface() {

      peerExternalGatewayInterface_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object peerGcpGateway_ = "";
    /**
     *
     *
     * <pre>
     * URL of the peer side HA GCP VPN gateway to which this VPN tunnel is connected. Provided by the client when the VPN tunnel is created. This field can be used when creating highly available VPN from VPC network to VPC network, the field is exclusive with the field peerExternalGateway. If provided, the VPN tunnel will automatically use the same vpnGatewayInterface ID in the peer GCP VPN gateway.
     * </pre>
     *
     * <code>string peer_gcp_gateway = 13431996;</code>
     *
     * @return The peerGcpGateway.
     */
    public java.lang.String getPeerGcpGateway() {
      java.lang.Object ref = peerGcpGateway_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        peerGcpGateway_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * URL of the peer side HA GCP VPN gateway to which this VPN tunnel is connected. Provided by the client when the VPN tunnel is created. This field can be used when creating highly available VPN from VPC network to VPC network, the field is exclusive with the field peerExternalGateway. If provided, the VPN tunnel will automatically use the same vpnGatewayInterface ID in the peer GCP VPN gateway.
     * </pre>
     *
     * <code>string peer_gcp_gateway = 13431996;</code>
     *
     * @return The bytes for peerGcpGateway.
     */
    public com.google.protobuf.ByteString getPeerGcpGatewayBytes() {
      java.lang.Object ref = peerGcpGateway_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        peerGcpGateway_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * URL of the peer side HA GCP VPN gateway to which this VPN tunnel is connected. Provided by the client when the VPN tunnel is created. This field can be used when creating highly available VPN from VPC network to VPC network, the field is exclusive with the field peerExternalGateway. If provided, the VPN tunnel will automatically use the same vpnGatewayInterface ID in the peer GCP VPN gateway.
     * </pre>
     *
     * <code>string peer_gcp_gateway = 13431996;</code>
     *
     * @param value The peerGcpGateway to set.
     * @return This builder for chaining.
     */
    public Builder setPeerGcpGateway(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      peerGcpGateway_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * URL of the peer side HA GCP VPN gateway to which this VPN tunnel is connected. Provided by the client when the VPN tunnel is created. This field can be used when creating highly available VPN from VPC network to VPC network, the field is exclusive with the field peerExternalGateway. If provided, the VPN tunnel will automatically use the same vpnGatewayInterface ID in the peer GCP VPN gateway.
     * </pre>
     *
     * <code>string peer_gcp_gateway = 13431996;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearPeerGcpGateway() {

      peerGcpGateway_ = getDefaultInstance().getPeerGcpGateway();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * URL of the peer side HA GCP VPN gateway to which this VPN tunnel is connected. Provided by the client when the VPN tunnel is created. This field can be used when creating highly available VPN from VPC network to VPC network, the field is exclusive with the field peerExternalGateway. If provided, the VPN tunnel will automatically use the same vpnGatewayInterface ID in the peer GCP VPN gateway.
     * </pre>
     *
     * <code>string peer_gcp_gateway = 13431996;</code>
     *
     * @param value The bytes for peerGcpGateway to set.
     * @return This builder for chaining.
     */
    public Builder setPeerGcpGatewayBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      peerGcpGateway_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object peerIp_ = "";
    /**
     *
     *
     * <pre>
     * IP address of the peer VPN gateway. Only IPv4 is supported.
     * </pre>
     *
     * <code>string peer_ip = 114814244;</code>
     *
     * @return The peerIp.
     */
    public java.lang.String getPeerIp() {
      java.lang.Object ref = peerIp_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        peerIp_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * IP address of the peer VPN gateway. Only IPv4 is supported.
     * </pre>
     *
     * <code>string peer_ip = 114814244;</code>
     *
     * @return The bytes for peerIp.
     */
    public com.google.protobuf.ByteString getPeerIpBytes() {
      java.lang.Object ref = peerIp_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        peerIp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * IP address of the peer VPN gateway. Only IPv4 is supported.
     * </pre>
     *
     * <code>string peer_ip = 114814244;</code>
     *
     * @param value The peerIp to set.
     * @return This builder for chaining.
     */
    public Builder setPeerIp(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      peerIp_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * IP address of the peer VPN gateway. Only IPv4 is supported.
     * </pre>
     *
     * <code>string peer_ip = 114814244;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearPeerIp() {

      peerIp_ = getDefaultInstance().getPeerIp();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * IP address of the peer VPN gateway. Only IPv4 is supported.
     * </pre>
     *
     * <code>string peer_ip = 114814244;</code>
     *
     * @param value The bytes for peerIp to set.
     * @return This builder for chaining.
     */
    public Builder setPeerIpBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      peerIp_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object region_ = "";
    /**
     *
     *
     * <pre>
     * [Output Only] URL of the region where the VPN tunnel resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
     * </pre>
     *
     * <code>string region = 138946292;</code>
     *
     * @return The region.
     */
    public java.lang.String getRegion() {
      java.lang.Object ref = region_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        region_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * [Output Only] URL of the region where the VPN tunnel resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
     * </pre>
     *
     * <code>string region = 138946292;</code>
     *
     * @return The bytes for region.
     */
    public com.google.protobuf.ByteString getRegionBytes() {
      java.lang.Object ref = region_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        region_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * [Output Only] URL of the region where the VPN tunnel resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
     * </pre>
     *
     * <code>string region = 138946292;</code>
     *
     * @param value The region to set.
     * @return This builder for chaining.
     */
    public Builder setRegion(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      region_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * [Output Only] URL of the region where the VPN tunnel resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
     * </pre>
     *
     * <code>string region = 138946292;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearRegion() {

      region_ = getDefaultInstance().getRegion();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * [Output Only] URL of the region where the VPN tunnel resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
     * </pre>
     *
     * <code>string region = 138946292;</code>
     *
     * @param value The bytes for region to set.
     * @return This builder for chaining.
     */
    public Builder setRegionBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      region_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList remoteTrafficSelector_ =
        com.google.protobuf.LazyStringArrayList.EMPTY;

    private void ensureRemoteTrafficSelectorIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        remoteTrafficSelector_ =
            new com.google.protobuf.LazyStringArrayList(remoteTrafficSelector_);
        bitField0_ |= 0x00000002;
      }
    }
    /**
     *
     *
     * <pre>
     * Remote traffic selectors to use when establishing the VPN tunnel with the peer VPN gateway. The value should be a CIDR formatted string, for example: 192.168.0.0/16. The ranges should be disjoint. Only IPv4 is supported.
     * </pre>
     *
     * <code>repeated string remote_traffic_selector = 90451642;</code>
     *
     * @return A list containing the remoteTrafficSelector.
     */
    public com.google.protobuf.ProtocolStringList getRemoteTrafficSelectorList() {
      return remoteTrafficSelector_.getUnmodifiableView();
    }
    /**
     *
     *
     * <pre>
     * Remote traffic selectors to use when establishing the VPN tunnel with the peer VPN gateway. The value should be a CIDR formatted string, for example: 192.168.0.0/16. The ranges should be disjoint. Only IPv4 is supported.
     * </pre>
     *
     * <code>repeated string remote_traffic_selector = 90451642;</code>
     *
     * @return The count of remoteTrafficSelector.
     */
    public int getRemoteTrafficSelectorCount() {
      return remoteTrafficSelector_.size();
    }
    /**
     *
     *
     * <pre>
     * Remote traffic selectors to use when establishing the VPN tunnel with the peer VPN gateway. The value should be a CIDR formatted string, for example: 192.168.0.0/16. The ranges should be disjoint. Only IPv4 is supported.
     * </pre>
     *
     * <code>repeated string remote_traffic_selector = 90451642;</code>
     *
     * @param index The index of the element to return.
     * @return The remoteTrafficSelector at the given index.
     */
    public java.lang.String getRemoteTrafficSelector(int index) {
      return remoteTrafficSelector_.get(index);
    }
    /**
     *
     *
     * <pre>
     * Remote traffic selectors to use when establishing the VPN tunnel with the peer VPN gateway. The value should be a CIDR formatted string, for example: 192.168.0.0/16. The ranges should be disjoint. Only IPv4 is supported.
     * </pre>
     *
     * <code>repeated string remote_traffic_selector = 90451642;</code>
     *
     * @param index The index of the value to return.
     * @return The bytes of the remoteTrafficSelector at the given index.
     */
    public com.google.protobuf.ByteString getRemoteTrafficSelectorBytes(int index) {
      return remoteTrafficSelector_.getByteString(index);
    }
    /**
     *
     *
     * <pre>
     * Remote traffic selectors to use when establishing the VPN tunnel with the peer VPN gateway. The value should be a CIDR formatted string, for example: 192.168.0.0/16. The ranges should be disjoint. Only IPv4 is supported.
     * </pre>
     *
     * <code>repeated string remote_traffic_selector = 90451642;</code>
     *
     * @param index The index to set the value at.
     * @param value The remoteTrafficSelector to set.
     * @return This builder for chaining.
     */
    public Builder setRemoteTrafficSelector(int index, java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureRemoteTrafficSelectorIsMutable();
      remoteTrafficSelector_.set(index, value);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Remote traffic selectors to use when establishing the VPN tunnel with the peer VPN gateway. The value should be a CIDR formatted string, for example: 192.168.0.0/16. The ranges should be disjoint. Only IPv4 is supported.
     * </pre>
     *
     * <code>repeated string remote_traffic_selector = 90451642;</code>
     *
     * @param value The remoteTrafficSelector to add.
     * @return This builder for chaining.
     */
    public Builder addRemoteTrafficSelector(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureRemoteTrafficSelectorIsMutable();
      remoteTrafficSelector_.add(value);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Remote traffic selectors to use when establishing the VPN tunnel with the peer VPN gateway. The value should be a CIDR formatted string, for example: 192.168.0.0/16. The ranges should be disjoint. Only IPv4 is supported.
     * </pre>
     *
     * <code>repeated string remote_traffic_selector = 90451642;</code>
     *
     * @param values The remoteTrafficSelector to add.
     * @return This builder for chaining.
     */
    public Builder addAllRemoteTrafficSelector(java.lang.Iterable<java.lang.String> values) {
      ensureRemoteTrafficSelectorIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(values, remoteTrafficSelector_);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Remote traffic selectors to use when establishing the VPN tunnel with the peer VPN gateway. The value should be a CIDR formatted string, for example: 192.168.0.0/16. The ranges should be disjoint. Only IPv4 is supported.
     * </pre>
     *
     * <code>repeated string remote_traffic_selector = 90451642;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearRemoteTrafficSelector() {
      remoteTrafficSelector_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Remote traffic selectors to use when establishing the VPN tunnel with the peer VPN gateway. The value should be a CIDR formatted string, for example: 192.168.0.0/16. The ranges should be disjoint. Only IPv4 is supported.
     * </pre>
     *
     * <code>repeated string remote_traffic_selector = 90451642;</code>
     *
     * @param value The bytes of the remoteTrafficSelector to add.
     * @return This builder for chaining.
     */
    public Builder addRemoteTrafficSelectorBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      ensureRemoteTrafficSelectorIsMutable();
      remoteTrafficSelector_.add(value);
      onChanged();
      return this;
    }

    private java.lang.Object router_ = "";
    /**
     *
     *
     * <pre>
     * URL of the router resource to be used for dynamic routing.
     * </pre>
     *
     * <code>string router = 148608841;</code>
     *
     * @return The router.
     */
    public java.lang.String getRouter() {
      java.lang.Object ref = router_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        router_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * URL of the router resource to be used for dynamic routing.
     * </pre>
     *
     * <code>string router = 148608841;</code>
     *
     * @return The bytes for router.
     */
    public com.google.protobuf.ByteString getRouterBytes() {
      java.lang.Object ref = router_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        router_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * URL of the router resource to be used for dynamic routing.
     * </pre>
     *
     * <code>string router = 148608841;</code>
     *
     * @param value The router to set.
     * @return This builder for chaining.
     */
    public Builder setRouter(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      router_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * URL of the router resource to be used for dynamic routing.
     * </pre>
     *
     * <code>string router = 148608841;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearRouter() {

      router_ = getDefaultInstance().getRouter();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * URL of the router resource to be used for dynamic routing.
     * </pre>
     *
     * <code>string router = 148608841;</code>
     *
     * @param value The bytes for router to set.
     * @return This builder for chaining.
     */
    public Builder setRouterBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      router_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object selfLink_ = "";
    /**
     *
     *
     * <pre>
     * [Output Only] Server-defined URL for the resource.
     * </pre>
     *
     * <code>string self_link = 187779341;</code>
     *
     * @return The selfLink.
     */
    public java.lang.String getSelfLink() {
      java.lang.Object ref = selfLink_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        selfLink_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * [Output Only] Server-defined URL for the resource.
     * </pre>
     *
     * <code>string self_link = 187779341;</code>
     *
     * @return The bytes for selfLink.
     */
    public com.google.protobuf.ByteString getSelfLinkBytes() {
      java.lang.Object ref = selfLink_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        selfLink_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * [Output Only] Server-defined URL for the resource.
     * </pre>
     *
     * <code>string self_link = 187779341;</code>
     *
     * @param value The selfLink to set.
     * @return This builder for chaining.
     */
    public Builder setSelfLink(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      selfLink_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * [Output Only] Server-defined URL for the resource.
     * </pre>
     *
     * <code>string self_link = 187779341;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearSelfLink() {

      selfLink_ = getDefaultInstance().getSelfLink();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * [Output Only] Server-defined URL for the resource.
     * </pre>
     *
     * <code>string self_link = 187779341;</code>
     *
     * @param value The bytes for selfLink to set.
     * @return This builder for chaining.
     */
    public Builder setSelfLinkBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      selfLink_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object sharedSecret_ = "";
    /**
     *
     *
     * <pre>
     * Shared secret used to set the secure session between the Cloud VPN gateway and the peer VPN gateway.
     * </pre>
     *
     * <code>string shared_secret = 113497034;</code>
     *
     * @return The sharedSecret.
     */
    public java.lang.String getSharedSecret() {
      java.lang.Object ref = sharedSecret_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sharedSecret_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Shared secret used to set the secure session between the Cloud VPN gateway and the peer VPN gateway.
     * </pre>
     *
     * <code>string shared_secret = 113497034;</code>
     *
     * @return The bytes for sharedSecret.
     */
    public com.google.protobuf.ByteString getSharedSecretBytes() {
      java.lang.Object ref = sharedSecret_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        sharedSecret_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Shared secret used to set the secure session between the Cloud VPN gateway and the peer VPN gateway.
     * </pre>
     *
     * <code>string shared_secret = 113497034;</code>
     *
     * @param value The sharedSecret to set.
     * @return This builder for chaining.
     */
    public Builder setSharedSecret(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      sharedSecret_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Shared secret used to set the secure session between the Cloud VPN gateway and the peer VPN gateway.
     * </pre>
     *
     * <code>string shared_secret = 113497034;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearSharedSecret() {

      sharedSecret_ = getDefaultInstance().getSharedSecret();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Shared secret used to set the secure session between the Cloud VPN gateway and the peer VPN gateway.
     * </pre>
     *
     * <code>string shared_secret = 113497034;</code>
     *
     * @param value The bytes for sharedSecret to set.
     * @return This builder for chaining.
     */
    public Builder setSharedSecretBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      sharedSecret_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object sharedSecretHash_ = "";
    /**
     *
     *
     * <pre>
     * Hash of the shared secret.
     * </pre>
     *
     * <code>string shared_secret_hash = 130446435;</code>
     *
     * @return The sharedSecretHash.
     */
    public java.lang.String getSharedSecretHash() {
      java.lang.Object ref = sharedSecretHash_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sharedSecretHash_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Hash of the shared secret.
     * </pre>
     *
     * <code>string shared_secret_hash = 130446435;</code>
     *
     * @return The bytes for sharedSecretHash.
     */
    public com.google.protobuf.ByteString getSharedSecretHashBytes() {
      java.lang.Object ref = sharedSecretHash_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        sharedSecretHash_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Hash of the shared secret.
     * </pre>
     *
     * <code>string shared_secret_hash = 130446435;</code>
     *
     * @param value The sharedSecretHash to set.
     * @return This builder for chaining.
     */
    public Builder setSharedSecretHash(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      sharedSecretHash_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Hash of the shared secret.
     * </pre>
     *
     * <code>string shared_secret_hash = 130446435;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearSharedSecretHash() {

      sharedSecretHash_ = getDefaultInstance().getSharedSecretHash();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Hash of the shared secret.
     * </pre>
     *
     * <code>string shared_secret_hash = 130446435;</code>
     *
     * @param value The bytes for sharedSecretHash to set.
     * @return This builder for chaining.
     */
    public Builder setSharedSecretHashBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      sharedSecretHash_ = value;
      onChanged();
      return this;
    }

    private int status_ = 0;
    /**
     *
     *
     * <pre>
     * [Output Only] The status of the VPN tunnel, which can be one of the following:
     * - PROVISIONING: Resource is being allocated for the VPN tunnel.
     * - WAITING_FOR_FULL_CONFIG: Waiting to receive all VPN-related configs from the user. Network, TargetVpnGateway, VpnTunnel, ForwardingRule, and Route resources are needed to setup the VPN tunnel.
     * - FIRST_HANDSHAKE: Successful first handshake with the peer VPN.
     * - ESTABLISHED: Secure session is successfully established with the peer VPN.
     * - NETWORK_ERROR: Deprecated, replaced by NO_INCOMING_PACKETS
     * - AUTHORIZATION_ERROR: Auth error (for example, bad shared secret).
     * - NEGOTIATION_FAILURE: Handshake failed.
     * - DEPROVISIONING: Resources are being deallocated for the VPN tunnel.
     * - FAILED: Tunnel creation has failed and the tunnel is not ready to be used.
     * - NO_INCOMING_PACKETS: No incoming packets from peer.
     * - REJECTED: Tunnel configuration was rejected, can be result of being blacklisted.
     * - ALLOCATING_RESOURCES: Cloud VPN is in the process of allocating all required resources.
     * - STOPPED: Tunnel is stopped due to its Forwarding Rules being deleted for Classic VPN tunnels or the project is in frozen state.
     * - PEER_IDENTITY_MISMATCH: Peer identity does not match peer IP, probably behind NAT.
     * - TS_NARROWING_NOT_ALLOWED: Traffic selector narrowing not allowed for an HA-VPN tunnel.
     * </pre>
     *
     * <code>.google.cloud.compute.v1.VpnTunnel.Status status = 181260274;</code>
     *
     * @return The enum numeric value on the wire for status.
     */
    @java.lang.Override
    public int getStatusValue() {
      return status_;
    }
    /**
     *
     *
     * <pre>
     * [Output Only] The status of the VPN tunnel, which can be one of the following:
     * - PROVISIONING: Resource is being allocated for the VPN tunnel.
     * - WAITING_FOR_FULL_CONFIG: Waiting to receive all VPN-related configs from the user. Network, TargetVpnGateway, VpnTunnel, ForwardingRule, and Route resources are needed to setup the VPN tunnel.
     * - FIRST_HANDSHAKE: Successful first handshake with the peer VPN.
     * - ESTABLISHED: Secure session is successfully established with the peer VPN.
     * - NETWORK_ERROR: Deprecated, replaced by NO_INCOMING_PACKETS
     * - AUTHORIZATION_ERROR: Auth error (for example, bad shared secret).
     * - NEGOTIATION_FAILURE: Handshake failed.
     * - DEPROVISIONING: Resources are being deallocated for the VPN tunnel.
     * - FAILED: Tunnel creation has failed and the tunnel is not ready to be used.
     * - NO_INCOMING_PACKETS: No incoming packets from peer.
     * - REJECTED: Tunnel configuration was rejected, can be result of being blacklisted.
     * - ALLOCATING_RESOURCES: Cloud VPN is in the process of allocating all required resources.
     * - STOPPED: Tunnel is stopped due to its Forwarding Rules being deleted for Classic VPN tunnels or the project is in frozen state.
     * - PEER_IDENTITY_MISMATCH: Peer identity does not match peer IP, probably behind NAT.
     * - TS_NARROWING_NOT_ALLOWED: Traffic selector narrowing not allowed for an HA-VPN tunnel.
     * </pre>
     *
     * <code>.google.cloud.compute.v1.VpnTunnel.Status status = 181260274;</code>
     *
     * @param value The enum numeric value on the wire for status to set.
     * @return This builder for chaining.
     */
    public Builder setStatusValue(int value) {

      status_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * [Output Only] The status of the VPN tunnel, which can be one of the following:
     * - PROVISIONING: Resource is being allocated for the VPN tunnel.
     * - WAITING_FOR_FULL_CONFIG: Waiting to receive all VPN-related configs from the user. Network, TargetVpnGateway, VpnTunnel, ForwardingRule, and Route resources are needed to setup the VPN tunnel.
     * - FIRST_HANDSHAKE: Successful first handshake with the peer VPN.
     * - ESTABLISHED: Secure session is successfully established with the peer VPN.
     * - NETWORK_ERROR: Deprecated, replaced by NO_INCOMING_PACKETS
     * - AUTHORIZATION_ERROR: Auth error (for example, bad shared secret).
     * - NEGOTIATION_FAILURE: Handshake failed.
     * - DEPROVISIONING: Resources are being deallocated for the VPN tunnel.
     * - FAILED: Tunnel creation has failed and the tunnel is not ready to be used.
     * - NO_INCOMING_PACKETS: No incoming packets from peer.
     * - REJECTED: Tunnel configuration was rejected, can be result of being blacklisted.
     * - ALLOCATING_RESOURCES: Cloud VPN is in the process of allocating all required resources.
     * - STOPPED: Tunnel is stopped due to its Forwarding Rules being deleted for Classic VPN tunnels or the project is in frozen state.
     * - PEER_IDENTITY_MISMATCH: Peer identity does not match peer IP, probably behind NAT.
     * - TS_NARROWING_NOT_ALLOWED: Traffic selector narrowing not allowed for an HA-VPN tunnel.
     * </pre>
     *
     * <code>.google.cloud.compute.v1.VpnTunnel.Status status = 181260274;</code>
     *
     * @return The status.
     */
    @java.lang.Override
    public com.google.cloud.compute.v1.VpnTunnel.Status getStatus() {
      @SuppressWarnings("deprecation")
      com.google.cloud.compute.v1.VpnTunnel.Status result =
          com.google.cloud.compute.v1.VpnTunnel.Status.valueOf(status_);
      return result == null ? com.google.cloud.compute.v1.VpnTunnel.Status.UNRECOGNIZED : result;
    }
    /**
     *
     *
     * <pre>
     * [Output Only] The status of the VPN tunnel, which can be one of the following:
     * - PROVISIONING: Resource is being allocated for the VPN tunnel.
     * - WAITING_FOR_FULL_CONFIG: Waiting to receive all VPN-related configs from the user. Network, TargetVpnGateway, VpnTunnel, ForwardingRule, and Route resources are needed to setup the VPN tunnel.
     * - FIRST_HANDSHAKE: Successful first handshake with the peer VPN.
     * - ESTABLISHED: Secure session is successfully established with the peer VPN.
     * - NETWORK_ERROR: Deprecated, replaced by NO_INCOMING_PACKETS
     * - AUTHORIZATION_ERROR: Auth error (for example, bad shared secret).
     * - NEGOTIATION_FAILURE: Handshake failed.
     * - DEPROVISIONING: Resources are being deallocated for the VPN tunnel.
     * - FAILED: Tunnel creation has failed and the tunnel is not ready to be used.
     * - NO_INCOMING_PACKETS: No incoming packets from peer.
     * - REJECTED: Tunnel configuration was rejected, can be result of being blacklisted.
     * - ALLOCATING_RESOURCES: Cloud VPN is in the process of allocating all required resources.
     * - STOPPED: Tunnel is stopped due to its Forwarding Rules being deleted for Classic VPN tunnels or the project is in frozen state.
     * - PEER_IDENTITY_MISMATCH: Peer identity does not match peer IP, probably behind NAT.
     * - TS_NARROWING_NOT_ALLOWED: Traffic selector narrowing not allowed for an HA-VPN tunnel.
     * </pre>
     *
     * <code>.google.cloud.compute.v1.VpnTunnel.Status status = 181260274;</code>
     *
     * @param value The status to set.
     * @return This builder for chaining.
     */
    public Builder setStatus(com.google.cloud.compute.v1.VpnTunnel.Status value) {
      if (value == null) {
        throw new NullPointerException();
      }

      status_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * [Output Only] The status of the VPN tunnel, which can be one of the following:
     * - PROVISIONING: Resource is being allocated for the VPN tunnel.
     * - WAITING_FOR_FULL_CONFIG: Waiting to receive all VPN-related configs from the user. Network, TargetVpnGateway, VpnTunnel, ForwardingRule, and Route resources are needed to setup the VPN tunnel.
     * - FIRST_HANDSHAKE: Successful first handshake with the peer VPN.
     * - ESTABLISHED: Secure session is successfully established with the peer VPN.
     * - NETWORK_ERROR: Deprecated, replaced by NO_INCOMING_PACKETS
     * - AUTHORIZATION_ERROR: Auth error (for example, bad shared secret).
     * - NEGOTIATION_FAILURE: Handshake failed.
     * - DEPROVISIONING: Resources are being deallocated for the VPN tunnel.
     * - FAILED: Tunnel creation has failed and the tunnel is not ready to be used.
     * - NO_INCOMING_PACKETS: No incoming packets from peer.
     * - REJECTED: Tunnel configuration was rejected, can be result of being blacklisted.
     * - ALLOCATING_RESOURCES: Cloud VPN is in the process of allocating all required resources.
     * - STOPPED: Tunnel is stopped due to its Forwarding Rules being deleted for Classic VPN tunnels or the project is in frozen state.
     * - PEER_IDENTITY_MISMATCH: Peer identity does not match peer IP, probably behind NAT.
     * - TS_NARROWING_NOT_ALLOWED: Traffic selector narrowing not allowed for an HA-VPN tunnel.
     * </pre>
     *
     * <code>.google.cloud.compute.v1.VpnTunnel.Status status = 181260274;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearStatus() {

      status_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object targetVpnGateway_ = "";
    /**
     *
     *
     * <pre>
     * URL of the Target VPN gateway with which this VPN tunnel is associated. Provided by the client when the VPN tunnel is created.
     * </pre>
     *
     * <code>string target_vpn_gateway = 264077387;</code>
     *
     * @return The targetVpnGateway.
     */
    public java.lang.String getTargetVpnGateway() {
      java.lang.Object ref = targetVpnGateway_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        targetVpnGateway_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * URL of the Target VPN gateway with which this VPN tunnel is associated. Provided by the client when the VPN tunnel is created.
     * </pre>
     *
     * <code>string target_vpn_gateway = 264077387;</code>
     *
     * @return The bytes for targetVpnGateway.
     */
    public com.google.protobuf.ByteString getTargetVpnGatewayBytes() {
      java.lang.Object ref = targetVpnGateway_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        targetVpnGateway_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * URL of the Target VPN gateway with which this VPN tunnel is associated. Provided by the client when the VPN tunnel is created.
     * </pre>
     *
     * <code>string target_vpn_gateway = 264077387;</code>
     *
     * @param value The targetVpnGateway to set.
     * @return This builder for chaining.
     */
    public Builder setTargetVpnGateway(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      targetVpnGateway_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * URL of the Target VPN gateway with which this VPN tunnel is associated. Provided by the client when the VPN tunnel is created.
     * </pre>
     *
     * <code>string target_vpn_gateway = 264077387;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearTargetVpnGateway() {

      targetVpnGateway_ = getDefaultInstance().getTargetVpnGateway();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * URL of the Target VPN gateway with which this VPN tunnel is associated. Provided by the client when the VPN tunnel is created.
     * </pre>
     *
     * <code>string target_vpn_gateway = 264077387;</code>
     *
     * @param value The bytes for targetVpnGateway to set.
     * @return This builder for chaining.
     */
    public Builder setTargetVpnGatewayBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      targetVpnGateway_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object vpnGateway_ = "";
    /**
     *
     *
     * <pre>
     * URL of the VPN gateway with which this VPN tunnel is associated. Provided by the client when the VPN tunnel is created. This must be used (instead of target_vpn_gateway) if a High Availability VPN gateway resource is created.
     * </pre>
     *
     * <code>string vpn_gateway = 138248697;</code>
     *
     * @return The vpnGateway.
     */
    public java.lang.String getVpnGateway() {
      java.lang.Object ref = vpnGateway_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        vpnGateway_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * URL of the VPN gateway with which this VPN tunnel is associated. Provided by the client when the VPN tunnel is created. This must be used (instead of target_vpn_gateway) if a High Availability VPN gateway resource is created.
     * </pre>
     *
     * <code>string vpn_gateway = 138248697;</code>
     *
     * @return The bytes for vpnGateway.
     */
    public com.google.protobuf.ByteString getVpnGatewayBytes() {
      java.lang.Object ref = vpnGateway_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        vpnGateway_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * URL of the VPN gateway with which this VPN tunnel is associated. Provided by the client when the VPN tunnel is created. This must be used (instead of target_vpn_gateway) if a High Availability VPN gateway resource is created.
     * </pre>
     *
     * <code>string vpn_gateway = 138248697;</code>
     *
     * @param value The vpnGateway to set.
     * @return This builder for chaining.
     */
    public Builder setVpnGateway(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      vpnGateway_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * URL of the VPN gateway with which this VPN tunnel is associated. Provided by the client when the VPN tunnel is created. This must be used (instead of target_vpn_gateway) if a High Availability VPN gateway resource is created.
     * </pre>
     *
     * <code>string vpn_gateway = 138248697;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearVpnGateway() {

      vpnGateway_ = getDefaultInstance().getVpnGateway();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * URL of the VPN gateway with which this VPN tunnel is associated. Provided by the client when the VPN tunnel is created. This must be used (instead of target_vpn_gateway) if a High Availability VPN gateway resource is created.
     * </pre>
     *
     * <code>string vpn_gateway = 138248697;</code>
     *
     * @param value The bytes for vpnGateway to set.
     * @return This builder for chaining.
     */
    public Builder setVpnGatewayBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      vpnGateway_ = value;
      onChanged();
      return this;
    }

    private int vpnGatewayInterface_;
    /**
     *
     *
     * <pre>
     * The interface ID of the VPN gateway with which this VPN tunnel is associated.
     * </pre>
     *
     * <code>int32 vpn_gateway_interface = 95979123;</code>
     *
     * @return The vpnGatewayInterface.
     */
    @java.lang.Override
    public int getVpnGatewayInterface() {
      return vpnGatewayInterface_;
    }
    /**
     *
     *
     * <pre>
     * The interface ID of the VPN gateway with which this VPN tunnel is associated.
     * </pre>
     *
     * <code>int32 vpn_gateway_interface = 95979123;</code>
     *
     * @param value The vpnGatewayInterface to set.
     * @return This builder for chaining.
     */
    public Builder setVpnGatewayInterface(int value) {

      vpnGatewayInterface_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The interface ID of the VPN gateway with which this VPN tunnel is associated.
     * </pre>
     *
     * <code>int32 vpn_gateway_interface = 95979123;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearVpnGatewayInterface() {

      vpnGatewayInterface_ = 0;
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.compute.v1.VpnTunnel)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.compute.v1.VpnTunnel)
  private static final com.google.cloud.compute.v1.VpnTunnel DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloud.compute.v1.VpnTunnel();
  }

  public static com.google.cloud.compute.v1.VpnTunnel getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<VpnTunnel> PARSER =
      new com.google.protobuf.AbstractParser<VpnTunnel>() {
        @java.lang.Override
        public VpnTunnel parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new VpnTunnel(input, extensionRegistry);
        }
      };

  public static com.google.protobuf.Parser<VpnTunnel> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<VpnTunnel> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.compute.v1.VpnTunnel getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
