/*
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/compute/v1/compute.proto

package com.google.cloud.compute.v1;

public interface SecuritySettingsOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.compute.v1.SecuritySettings)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Optional. A URL referring to a networksecurity.ClientTlsPolicy resource that describes how clients should authenticate with this service's backends.
   * clientTlsPolicy only applies to a global BackendService with the loadBalancingScheme set to INTERNAL_SELF_MANAGED.
   * If left blank, communications are not encrypted.
   * Note: This field currently has no impact.
   * </pre>
   *
   * <code>string client_tls_policy = 193889770;</code>
   *
   * @return The clientTlsPolicy.
   */
  java.lang.String getClientTlsPolicy();
  /**
   *
   *
   * <pre>
   * Optional. A URL referring to a networksecurity.ClientTlsPolicy resource that describes how clients should authenticate with this service's backends.
   * clientTlsPolicy only applies to a global BackendService with the loadBalancingScheme set to INTERNAL_SELF_MANAGED.
   * If left blank, communications are not encrypted.
   * Note: This field currently has no impact.
   * </pre>
   *
   * <code>string client_tls_policy = 193889770;</code>
   *
   * @return The bytes for clientTlsPolicy.
   */
  com.google.protobuf.ByteString getClientTlsPolicyBytes();

  /**
   *
   *
   * <pre>
   * Optional. A list of Subject Alternative Names (SANs) that the client verifies during a mutual TLS handshake with an server/endpoint for this BackendService. When the server presents its X.509 certificate to the client, the client inspects the certificate's subjectAltName field. If the field contains one of the specified values, the communication continues. Otherwise, it fails. This additional check enables the client to verify that the server is authorized to run the requested service.
   * Note that the contents of the server certificate's subjectAltName field are configured by the Public Key Infrastructure which provisions server identities.
   * Only applies to a global BackendService with loadBalancingScheme set to INTERNAL_SELF_MANAGED. Only applies when BackendService has an attached clientTlsPolicy with clientCertificate (mTLS mode).
   * Note: This field currently has no impact.
   * </pre>
   *
   * <code>repeated string subject_alt_names = 61594079;</code>
   *
   * @return A list containing the subjectAltNames.
   */
  java.util.List<java.lang.String> getSubjectAltNamesList();
  /**
   *
   *
   * <pre>
   * Optional. A list of Subject Alternative Names (SANs) that the client verifies during a mutual TLS handshake with an server/endpoint for this BackendService. When the server presents its X.509 certificate to the client, the client inspects the certificate's subjectAltName field. If the field contains one of the specified values, the communication continues. Otherwise, it fails. This additional check enables the client to verify that the server is authorized to run the requested service.
   * Note that the contents of the server certificate's subjectAltName field are configured by the Public Key Infrastructure which provisions server identities.
   * Only applies to a global BackendService with loadBalancingScheme set to INTERNAL_SELF_MANAGED. Only applies when BackendService has an attached clientTlsPolicy with clientCertificate (mTLS mode).
   * Note: This field currently has no impact.
   * </pre>
   *
   * <code>repeated string subject_alt_names = 61594079;</code>
   *
   * @return The count of subjectAltNames.
   */
  int getSubjectAltNamesCount();
  /**
   *
   *
   * <pre>
   * Optional. A list of Subject Alternative Names (SANs) that the client verifies during a mutual TLS handshake with an server/endpoint for this BackendService. When the server presents its X.509 certificate to the client, the client inspects the certificate's subjectAltName field. If the field contains one of the specified values, the communication continues. Otherwise, it fails. This additional check enables the client to verify that the server is authorized to run the requested service.
   * Note that the contents of the server certificate's subjectAltName field are configured by the Public Key Infrastructure which provisions server identities.
   * Only applies to a global BackendService with loadBalancingScheme set to INTERNAL_SELF_MANAGED. Only applies when BackendService has an attached clientTlsPolicy with clientCertificate (mTLS mode).
   * Note: This field currently has no impact.
   * </pre>
   *
   * <code>repeated string subject_alt_names = 61594079;</code>
   *
   * @param index The index of the element to return.
   * @return The subjectAltNames at the given index.
   */
  java.lang.String getSubjectAltNames(int index);
  /**
   *
   *
   * <pre>
   * Optional. A list of Subject Alternative Names (SANs) that the client verifies during a mutual TLS handshake with an server/endpoint for this BackendService. When the server presents its X.509 certificate to the client, the client inspects the certificate's subjectAltName field. If the field contains one of the specified values, the communication continues. Otherwise, it fails. This additional check enables the client to verify that the server is authorized to run the requested service.
   * Note that the contents of the server certificate's subjectAltName field are configured by the Public Key Infrastructure which provisions server identities.
   * Only applies to a global BackendService with loadBalancingScheme set to INTERNAL_SELF_MANAGED. Only applies when BackendService has an attached clientTlsPolicy with clientCertificate (mTLS mode).
   * Note: This field currently has no impact.
   * </pre>
   *
   * <code>repeated string subject_alt_names = 61594079;</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the subjectAltNames at the given index.
   */
  com.google.protobuf.ByteString getSubjectAltNamesBytes(int index);
}
