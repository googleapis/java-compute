/*
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/compute/v1/compute.proto

package com.google.cloud.compute.v1;

/**
 *
 *
 * <pre>
 * </pre>
 *
 * Protobuf type {@code google.cloud.compute.v1.HTTP2HealthCheck}
 */
public final class HTTP2HealthCheck extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.compute.v1.HTTP2HealthCheck)
    HTTP2HealthCheckOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use HTTP2HealthCheck.newBuilder() to construct.
  private HTTP2HealthCheck(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private HTTP2HealthCheck() {
    host_ = "";
    portName_ = "";
    portSpecification_ = 0;
    proxyHeader_ = 0;
    requestPath_ = "";
    response_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new HTTP2HealthCheck();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
    return this.unknownFields;
  }

  private HTTP2HealthCheck(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 25668930:
            {
              java.lang.String s = input.readStringRequireUtf8();

              host_ = s;
              break;
            }
          case 27575304:
            {
              port_ = input.readInt32();
              break;
            }
          case 332274762:
            {
              java.lang.String s = input.readStringRequireUtf8();

              portName_ = s;
              break;
            }
          case 412724776:
            {
              int rawValue = input.readEnum();

              portSpecification_ = rawValue;
              break;
            }
          case 1282993136:
            {
              int rawValue = input.readEnum();

              proxyHeader_ = rawValue;
              break;
            }
          case 1572381194:
            {
              java.lang.String s = input.readStringRequireUtf8();

              response_ = s;
              break;
            }
          case 1835228842:
            {
              java.lang.String s = input.readStringRequireUtf8();

              requestPath_ = s;
              break;
            }
          default:
            {
              if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.compute.v1.Compute
        .internal_static_google_cloud_compute_v1_HTTP2HealthCheck_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.compute.v1.Compute
        .internal_static_google_cloud_compute_v1_HTTP2HealthCheck_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.compute.v1.HTTP2HealthCheck.class,
            com.google.cloud.compute.v1.HTTP2HealthCheck.Builder.class);
  }

  /**
   *
   *
   * <pre>
   * Specifies how port is selected for health checking, can be one of following values:
   * USE_FIXED_PORT: The port number in port is used for health checking.
   * USE_NAMED_PORT: The portName is used for health checking.
   * USE_SERVING_PORT: For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking.
   * If not specified, HTTP2 health check follows behavior specified in port and portName fields.
   * </pre>
   *
   * Protobuf enum {@code google.cloud.compute.v1.HTTP2HealthCheck.PortSpecification}
   */
  public enum PortSpecification implements com.google.protobuf.ProtocolMessageEnum {
    /**
     *
     *
     * <pre>
     * A value indicating that the enum field is not set.
     * </pre>
     *
     * <code>UNDEFINED_PORT_SPECIFICATION = 0;</code>
     */
    UNDEFINED_PORT_SPECIFICATION(0),
    /** <code>USE_FIXED_PORT = 190235748;</code> */
    USE_FIXED_PORT(190235748),
    /** <code>USE_NAMED_PORT = 80865215;</code> */
    USE_NAMED_PORT(80865215),
    /** <code>USE_SERVING_PORT = 94202060;</code> */
    USE_SERVING_PORT(94202060),
    UNRECOGNIZED(-1),
    ;

    /**
     *
     *
     * <pre>
     * A value indicating that the enum field is not set.
     * </pre>
     *
     * <code>UNDEFINED_PORT_SPECIFICATION = 0;</code>
     */
    public static final int UNDEFINED_PORT_SPECIFICATION_VALUE = 0;
    /** <code>USE_FIXED_PORT = 190235748;</code> */
    public static final int USE_FIXED_PORT_VALUE = 190235748;
    /** <code>USE_NAMED_PORT = 80865215;</code> */
    public static final int USE_NAMED_PORT_VALUE = 80865215;
    /** <code>USE_SERVING_PORT = 94202060;</code> */
    public static final int USE_SERVING_PORT_VALUE = 94202060;

    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PortSpecification valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static PortSpecification forNumber(int value) {
      switch (value) {
        case 0:
          return UNDEFINED_PORT_SPECIFICATION;
        case 190235748:
          return USE_FIXED_PORT;
        case 80865215:
          return USE_NAMED_PORT;
        case 94202060:
          return USE_SERVING_PORT;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PortSpecification>
        internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<PortSpecification>
        internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<PortSpecification>() {
              public PortSpecification findValueByNumber(int number) {
                return PortSpecification.forNumber(number);
              }
            };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return com.google.cloud.compute.v1.HTTP2HealthCheck.getDescriptor().getEnumTypes().get(0);
    }

    private static final PortSpecification[] VALUES = values();

    public static PortSpecification valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PortSpecification(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.cloud.compute.v1.HTTP2HealthCheck.PortSpecification)
  }

  /**
   *
   *
   * <pre>
   * Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
   * </pre>
   *
   * Protobuf enum {@code google.cloud.compute.v1.HTTP2HealthCheck.ProxyHeader}
   */
  public enum ProxyHeader implements com.google.protobuf.ProtocolMessageEnum {
    /**
     *
     *
     * <pre>
     * A value indicating that the enum field is not set.
     * </pre>
     *
     * <code>UNDEFINED_PROXY_HEADER = 0;</code>
     */
    UNDEFINED_PROXY_HEADER(0),
    /** <code>NONE = 2402104;</code> */
    NONE(2402104),
    /** <code>PROXY_V1 = 65917484;</code> */
    PROXY_V1(65917484),
    UNRECOGNIZED(-1),
    ;

    /**
     *
     *
     * <pre>
     * A value indicating that the enum field is not set.
     * </pre>
     *
     * <code>UNDEFINED_PROXY_HEADER = 0;</code>
     */
    public static final int UNDEFINED_PROXY_HEADER_VALUE = 0;
    /** <code>NONE = 2402104;</code> */
    public static final int NONE_VALUE = 2402104;
    /** <code>PROXY_V1 = 65917484;</code> */
    public static final int PROXY_V1_VALUE = 65917484;

    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ProxyHeader valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ProxyHeader forNumber(int value) {
      switch (value) {
        case 0:
          return UNDEFINED_PROXY_HEADER;
        case 2402104:
          return NONE;
        case 65917484:
          return PROXY_V1;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ProxyHeader> internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<ProxyHeader> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ProxyHeader>() {
          public ProxyHeader findValueByNumber(int number) {
            return ProxyHeader.forNumber(number);
          }
        };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return com.google.cloud.compute.v1.HTTP2HealthCheck.getDescriptor().getEnumTypes().get(1);
    }

    private static final ProxyHeader[] VALUES = values();

    public static ProxyHeader valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ProxyHeader(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.cloud.compute.v1.HTTP2HealthCheck.ProxyHeader)
  }

  public static final int HOST_FIELD_NUMBER = 3208616;
  private volatile java.lang.Object host_;
  /**
   *
   *
   * <pre>
   * The value of the host header in the HTTP/2 health check request. If left empty (default value), the IP on behalf of which this health check is performed will be used.
   * </pre>
   *
   * <code>string host = 3208616;</code>
   *
   * @return The host.
   */
  @java.lang.Override
  public java.lang.String getHost() {
    java.lang.Object ref = host_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      host_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * The value of the host header in the HTTP/2 health check request. If left empty (default value), the IP on behalf of which this health check is performed will be used.
   * </pre>
   *
   * <code>string host = 3208616;</code>
   *
   * @return The bytes for host.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getHostBytes() {
    java.lang.Object ref = host_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      host_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PORT_FIELD_NUMBER = 3446913;
  private int port_;
  /**
   *
   *
   * <pre>
   * The TCP port number for the health check request. The default value is 443. Valid values are 1 through 65535.
   * </pre>
   *
   * <code>int32 port = 3446913;</code>
   *
   * @return The port.
   */
  @java.lang.Override
  public int getPort() {
    return port_;
  }

  public static final int PORT_NAME_FIELD_NUMBER = 41534345;
  private volatile java.lang.Object portName_;
  /**
   *
   *
   * <pre>
   * Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence.
   * </pre>
   *
   * <code>string port_name = 41534345;</code>
   *
   * @return The portName.
   */
  @java.lang.Override
  public java.lang.String getPortName() {
    java.lang.Object ref = portName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      portName_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence.
   * </pre>
   *
   * <code>string port_name = 41534345;</code>
   *
   * @return The bytes for portName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getPortNameBytes() {
    java.lang.Object ref = portName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      portName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PORT_SPECIFICATION_FIELD_NUMBER = 51590597;
  private int portSpecification_;
  /**
   *
   *
   * <pre>
   * Specifies how port is selected for health checking, can be one of following values:
   * USE_FIXED_PORT: The port number in port is used for health checking.
   * USE_NAMED_PORT: The portName is used for health checking.
   * USE_SERVING_PORT: For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking.
   * If not specified, HTTP2 health check follows behavior specified in port and portName fields.
   * </pre>
   *
   * <code>
   * .google.cloud.compute.v1.HTTP2HealthCheck.PortSpecification port_specification = 51590597;
   * </code>
   *
   * @return The enum numeric value on the wire for portSpecification.
   */
  @java.lang.Override
  public int getPortSpecificationValue() {
    return portSpecification_;
  }
  /**
   *
   *
   * <pre>
   * Specifies how port is selected for health checking, can be one of following values:
   * USE_FIXED_PORT: The port number in port is used for health checking.
   * USE_NAMED_PORT: The portName is used for health checking.
   * USE_SERVING_PORT: For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking.
   * If not specified, HTTP2 health check follows behavior specified in port and portName fields.
   * </pre>
   *
   * <code>
   * .google.cloud.compute.v1.HTTP2HealthCheck.PortSpecification port_specification = 51590597;
   * </code>
   *
   * @return The portSpecification.
   */
  @java.lang.Override
  public com.google.cloud.compute.v1.HTTP2HealthCheck.PortSpecification getPortSpecification() {
    @SuppressWarnings("deprecation")
    com.google.cloud.compute.v1.HTTP2HealthCheck.PortSpecification result =
        com.google.cloud.compute.v1.HTTP2HealthCheck.PortSpecification.valueOf(portSpecification_);
    return result == null
        ? com.google.cloud.compute.v1.HTTP2HealthCheck.PortSpecification.UNRECOGNIZED
        : result;
  }

  public static final int PROXY_HEADER_FIELD_NUMBER = 160374142;
  private int proxyHeader_;
  /**
   *
   *
   * <pre>
   * Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
   * </pre>
   *
   * <code>.google.cloud.compute.v1.HTTP2HealthCheck.ProxyHeader proxy_header = 160374142;</code>
   *
   * @return The enum numeric value on the wire for proxyHeader.
   */
  @java.lang.Override
  public int getProxyHeaderValue() {
    return proxyHeader_;
  }
  /**
   *
   *
   * <pre>
   * Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
   * </pre>
   *
   * <code>.google.cloud.compute.v1.HTTP2HealthCheck.ProxyHeader proxy_header = 160374142;</code>
   *
   * @return The proxyHeader.
   */
  @java.lang.Override
  public com.google.cloud.compute.v1.HTTP2HealthCheck.ProxyHeader getProxyHeader() {
    @SuppressWarnings("deprecation")
    com.google.cloud.compute.v1.HTTP2HealthCheck.ProxyHeader result =
        com.google.cloud.compute.v1.HTTP2HealthCheck.ProxyHeader.valueOf(proxyHeader_);
    return result == null
        ? com.google.cloud.compute.v1.HTTP2HealthCheck.ProxyHeader.UNRECOGNIZED
        : result;
  }

  public static final int REQUEST_PATH_FIELD_NUMBER = 229403605;
  private volatile java.lang.Object requestPath_;
  /**
   *
   *
   * <pre>
   * The request path of the HTTP/2 health check request. The default value is /.
   * </pre>
   *
   * <code>string request_path = 229403605;</code>
   *
   * @return The requestPath.
   */
  @java.lang.Override
  public java.lang.String getRequestPath() {
    java.lang.Object ref = requestPath_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      requestPath_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * The request path of the HTTP/2 health check request. The default value is /.
   * </pre>
   *
   * <code>string request_path = 229403605;</code>
   *
   * @return The bytes for requestPath.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getRequestPathBytes() {
    java.lang.Object ref = requestPath_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      requestPath_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int RESPONSE_FIELD_NUMBER = 196547649;
  private volatile java.lang.Object response_;
  /**
   *
   *
   * <pre>
   * The string to match anywhere in the first 1024 bytes of the response body. If left empty (the default value), the status code determines health. The response data can only be ASCII.
   * </pre>
   *
   * <code>string response = 196547649;</code>
   *
   * @return The response.
   */
  @java.lang.Override
  public java.lang.String getResponse() {
    java.lang.Object ref = response_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      response_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * The string to match anywhere in the first 1024 bytes of the response body. If left empty (the default value), the status code determines health. The response data can only be ASCII.
   * </pre>
   *
   * <code>string response = 196547649;</code>
   *
   * @return The bytes for response.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getResponseBytes() {
    java.lang.Object ref = response_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      response_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (!getHostBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3208616, host_);
    }
    if (port_ != 0) {
      output.writeInt32(3446913, port_);
    }
    if (!getPortNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 41534345, portName_);
    }
    if (portSpecification_
        != com.google.cloud.compute.v1.HTTP2HealthCheck.PortSpecification
            .UNDEFINED_PORT_SPECIFICATION
            .getNumber()) {
      output.writeEnum(51590597, portSpecification_);
    }
    if (proxyHeader_
        != com.google.cloud.compute.v1.HTTP2HealthCheck.ProxyHeader.UNDEFINED_PROXY_HEADER
            .getNumber()) {
      output.writeEnum(160374142, proxyHeader_);
    }
    if (!getResponseBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 196547649, response_);
    }
    if (!getRequestPathBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 229403605, requestPath_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getHostBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3208616, host_);
    }
    if (port_ != 0) {
      size += com.google.protobuf.CodedOutputStream.computeInt32Size(3446913, port_);
    }
    if (!getPortNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(41534345, portName_);
    }
    if (portSpecification_
        != com.google.cloud.compute.v1.HTTP2HealthCheck.PortSpecification
            .UNDEFINED_PORT_SPECIFICATION
            .getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(51590597, portSpecification_);
    }
    if (proxyHeader_
        != com.google.cloud.compute.v1.HTTP2HealthCheck.ProxyHeader.UNDEFINED_PROXY_HEADER
            .getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(160374142, proxyHeader_);
    }
    if (!getResponseBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(196547649, response_);
    }
    if (!getRequestPathBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(229403605, requestPath_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.compute.v1.HTTP2HealthCheck)) {
      return super.equals(obj);
    }
    com.google.cloud.compute.v1.HTTP2HealthCheck other =
        (com.google.cloud.compute.v1.HTTP2HealthCheck) obj;

    if (!getHost().equals(other.getHost())) return false;
    if (getPort() != other.getPort()) return false;
    if (!getPortName().equals(other.getPortName())) return false;
    if (portSpecification_ != other.portSpecification_) return false;
    if (proxyHeader_ != other.proxyHeader_) return false;
    if (!getRequestPath().equals(other.getRequestPath())) return false;
    if (!getResponse().equals(other.getResponse())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + HOST_FIELD_NUMBER;
    hash = (53 * hash) + getHost().hashCode();
    hash = (37 * hash) + PORT_FIELD_NUMBER;
    hash = (53 * hash) + getPort();
    hash = (37 * hash) + PORT_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getPortName().hashCode();
    hash = (37 * hash) + PORT_SPECIFICATION_FIELD_NUMBER;
    hash = (53 * hash) + portSpecification_;
    hash = (37 * hash) + PROXY_HEADER_FIELD_NUMBER;
    hash = (53 * hash) + proxyHeader_;
    hash = (37 * hash) + REQUEST_PATH_FIELD_NUMBER;
    hash = (53 * hash) + getRequestPath().hashCode();
    hash = (37 * hash) + RESPONSE_FIELD_NUMBER;
    hash = (53 * hash) + getResponse().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.compute.v1.HTTP2HealthCheck parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.compute.v1.HTTP2HealthCheck parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.compute.v1.HTTP2HealthCheck parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.compute.v1.HTTP2HealthCheck parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.compute.v1.HTTP2HealthCheck parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.compute.v1.HTTP2HealthCheck parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.compute.v1.HTTP2HealthCheck parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.compute.v1.HTTP2HealthCheck parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.compute.v1.HTTP2HealthCheck parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.compute.v1.HTTP2HealthCheck parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.compute.v1.HTTP2HealthCheck parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.compute.v1.HTTP2HealthCheck parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.cloud.compute.v1.HTTP2HealthCheck prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * </pre>
   *
   * Protobuf type {@code google.cloud.compute.v1.HTTP2HealthCheck}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.compute.v1.HTTP2HealthCheck)
      com.google.cloud.compute.v1.HTTP2HealthCheckOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.compute.v1.Compute
          .internal_static_google_cloud_compute_v1_HTTP2HealthCheck_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.compute.v1.Compute
          .internal_static_google_cloud_compute_v1_HTTP2HealthCheck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.compute.v1.HTTP2HealthCheck.class,
              com.google.cloud.compute.v1.HTTP2HealthCheck.Builder.class);
    }

    // Construct using com.google.cloud.compute.v1.HTTP2HealthCheck.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {}
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      host_ = "";

      port_ = 0;

      portName_ = "";

      portSpecification_ = 0;

      proxyHeader_ = 0;

      requestPath_ = "";

      response_ = "";

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.compute.v1.Compute
          .internal_static_google_cloud_compute_v1_HTTP2HealthCheck_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.compute.v1.HTTP2HealthCheck getDefaultInstanceForType() {
      return com.google.cloud.compute.v1.HTTP2HealthCheck.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.compute.v1.HTTP2HealthCheck build() {
      com.google.cloud.compute.v1.HTTP2HealthCheck result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.compute.v1.HTTP2HealthCheck buildPartial() {
      com.google.cloud.compute.v1.HTTP2HealthCheck result =
          new com.google.cloud.compute.v1.HTTP2HealthCheck(this);
      result.host_ = host_;
      result.port_ = port_;
      result.portName_ = portName_;
      result.portSpecification_ = portSpecification_;
      result.proxyHeader_ = proxyHeader_;
      result.requestPath_ = requestPath_;
      result.response_ = response_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.compute.v1.HTTP2HealthCheck) {
        return mergeFrom((com.google.cloud.compute.v1.HTTP2HealthCheck) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.compute.v1.HTTP2HealthCheck other) {
      if (other == com.google.cloud.compute.v1.HTTP2HealthCheck.getDefaultInstance()) return this;
      if (!other.getHost().isEmpty()) {
        host_ = other.host_;
        onChanged();
      }
      if (other.getPort() != 0) {
        setPort(other.getPort());
      }
      if (!other.getPortName().isEmpty()) {
        portName_ = other.portName_;
        onChanged();
      }
      if (other.portSpecification_ != 0) {
        setPortSpecificationValue(other.getPortSpecificationValue());
      }
      if (other.proxyHeader_ != 0) {
        setProxyHeaderValue(other.getProxyHeaderValue());
      }
      if (!other.getRequestPath().isEmpty()) {
        requestPath_ = other.requestPath_;
        onChanged();
      }
      if (!other.getResponse().isEmpty()) {
        response_ = other.response_;
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.cloud.compute.v1.HTTP2HealthCheck parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.cloud.compute.v1.HTTP2HealthCheck) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object host_ = "";
    /**
     *
     *
     * <pre>
     * The value of the host header in the HTTP/2 health check request. If left empty (default value), the IP on behalf of which this health check is performed will be used.
     * </pre>
     *
     * <code>string host = 3208616;</code>
     *
     * @return The host.
     */
    public java.lang.String getHost() {
      java.lang.Object ref = host_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        host_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The value of the host header in the HTTP/2 health check request. If left empty (default value), the IP on behalf of which this health check is performed will be used.
     * </pre>
     *
     * <code>string host = 3208616;</code>
     *
     * @return The bytes for host.
     */
    public com.google.protobuf.ByteString getHostBytes() {
      java.lang.Object ref = host_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        host_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The value of the host header in the HTTP/2 health check request. If left empty (default value), the IP on behalf of which this health check is performed will be used.
     * </pre>
     *
     * <code>string host = 3208616;</code>
     *
     * @param value The host to set.
     * @return This builder for chaining.
     */
    public Builder setHost(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      host_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The value of the host header in the HTTP/2 health check request. If left empty (default value), the IP on behalf of which this health check is performed will be used.
     * </pre>
     *
     * <code>string host = 3208616;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearHost() {

      host_ = getDefaultInstance().getHost();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The value of the host header in the HTTP/2 health check request. If left empty (default value), the IP on behalf of which this health check is performed will be used.
     * </pre>
     *
     * <code>string host = 3208616;</code>
     *
     * @param value The bytes for host to set.
     * @return This builder for chaining.
     */
    public Builder setHostBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      host_ = value;
      onChanged();
      return this;
    }

    private int port_;
    /**
     *
     *
     * <pre>
     * The TCP port number for the health check request. The default value is 443. Valid values are 1 through 65535.
     * </pre>
     *
     * <code>int32 port = 3446913;</code>
     *
     * @return The port.
     */
    @java.lang.Override
    public int getPort() {
      return port_;
    }
    /**
     *
     *
     * <pre>
     * The TCP port number for the health check request. The default value is 443. Valid values are 1 through 65535.
     * </pre>
     *
     * <code>int32 port = 3446913;</code>
     *
     * @param value The port to set.
     * @return This builder for chaining.
     */
    public Builder setPort(int value) {

      port_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The TCP port number for the health check request. The default value is 443. Valid values are 1 through 65535.
     * </pre>
     *
     * <code>int32 port = 3446913;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearPort() {

      port_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object portName_ = "";
    /**
     *
     *
     * <pre>
     * Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence.
     * </pre>
     *
     * <code>string port_name = 41534345;</code>
     *
     * @return The portName.
     */
    public java.lang.String getPortName() {
      java.lang.Object ref = portName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        portName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence.
     * </pre>
     *
     * <code>string port_name = 41534345;</code>
     *
     * @return The bytes for portName.
     */
    public com.google.protobuf.ByteString getPortNameBytes() {
      java.lang.Object ref = portName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        portName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence.
     * </pre>
     *
     * <code>string port_name = 41534345;</code>
     *
     * @param value The portName to set.
     * @return This builder for chaining.
     */
    public Builder setPortName(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      portName_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence.
     * </pre>
     *
     * <code>string port_name = 41534345;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearPortName() {

      portName_ = getDefaultInstance().getPortName();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence.
     * </pre>
     *
     * <code>string port_name = 41534345;</code>
     *
     * @param value The bytes for portName to set.
     * @return This builder for chaining.
     */
    public Builder setPortNameBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      portName_ = value;
      onChanged();
      return this;
    }

    private int portSpecification_ = 0;
    /**
     *
     *
     * <pre>
     * Specifies how port is selected for health checking, can be one of following values:
     * USE_FIXED_PORT: The port number in port is used for health checking.
     * USE_NAMED_PORT: The portName is used for health checking.
     * USE_SERVING_PORT: For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking.
     * If not specified, HTTP2 health check follows behavior specified in port and portName fields.
     * </pre>
     *
     * <code>
     * .google.cloud.compute.v1.HTTP2HealthCheck.PortSpecification port_specification = 51590597;
     * </code>
     *
     * @return The enum numeric value on the wire for portSpecification.
     */
    @java.lang.Override
    public int getPortSpecificationValue() {
      return portSpecification_;
    }
    /**
     *
     *
     * <pre>
     * Specifies how port is selected for health checking, can be one of following values:
     * USE_FIXED_PORT: The port number in port is used for health checking.
     * USE_NAMED_PORT: The portName is used for health checking.
     * USE_SERVING_PORT: For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking.
     * If not specified, HTTP2 health check follows behavior specified in port and portName fields.
     * </pre>
     *
     * <code>
     * .google.cloud.compute.v1.HTTP2HealthCheck.PortSpecification port_specification = 51590597;
     * </code>
     *
     * @param value The enum numeric value on the wire for portSpecification to set.
     * @return This builder for chaining.
     */
    public Builder setPortSpecificationValue(int value) {

      portSpecification_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Specifies how port is selected for health checking, can be one of following values:
     * USE_FIXED_PORT: The port number in port is used for health checking.
     * USE_NAMED_PORT: The portName is used for health checking.
     * USE_SERVING_PORT: For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking.
     * If not specified, HTTP2 health check follows behavior specified in port and portName fields.
     * </pre>
     *
     * <code>
     * .google.cloud.compute.v1.HTTP2HealthCheck.PortSpecification port_specification = 51590597;
     * </code>
     *
     * @return The portSpecification.
     */
    @java.lang.Override
    public com.google.cloud.compute.v1.HTTP2HealthCheck.PortSpecification getPortSpecification() {
      @SuppressWarnings("deprecation")
      com.google.cloud.compute.v1.HTTP2HealthCheck.PortSpecification result =
          com.google.cloud.compute.v1.HTTP2HealthCheck.PortSpecification.valueOf(
              portSpecification_);
      return result == null
          ? com.google.cloud.compute.v1.HTTP2HealthCheck.PortSpecification.UNRECOGNIZED
          : result;
    }
    /**
     *
     *
     * <pre>
     * Specifies how port is selected for health checking, can be one of following values:
     * USE_FIXED_PORT: The port number in port is used for health checking.
     * USE_NAMED_PORT: The portName is used for health checking.
     * USE_SERVING_PORT: For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking.
     * If not specified, HTTP2 health check follows behavior specified in port and portName fields.
     * </pre>
     *
     * <code>
     * .google.cloud.compute.v1.HTTP2HealthCheck.PortSpecification port_specification = 51590597;
     * </code>
     *
     * @param value The portSpecification to set.
     * @return This builder for chaining.
     */
    public Builder setPortSpecification(
        com.google.cloud.compute.v1.HTTP2HealthCheck.PortSpecification value) {
      if (value == null) {
        throw new NullPointerException();
      }

      portSpecification_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Specifies how port is selected for health checking, can be one of following values:
     * USE_FIXED_PORT: The port number in port is used for health checking.
     * USE_NAMED_PORT: The portName is used for health checking.
     * USE_SERVING_PORT: For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking.
     * If not specified, HTTP2 health check follows behavior specified in port and portName fields.
     * </pre>
     *
     * <code>
     * .google.cloud.compute.v1.HTTP2HealthCheck.PortSpecification port_specification = 51590597;
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearPortSpecification() {

      portSpecification_ = 0;
      onChanged();
      return this;
    }

    private int proxyHeader_ = 0;
    /**
     *
     *
     * <pre>
     * Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
     * </pre>
     *
     * <code>.google.cloud.compute.v1.HTTP2HealthCheck.ProxyHeader proxy_header = 160374142;</code>
     *
     * @return The enum numeric value on the wire for proxyHeader.
     */
    @java.lang.Override
    public int getProxyHeaderValue() {
      return proxyHeader_;
    }
    /**
     *
     *
     * <pre>
     * Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
     * </pre>
     *
     * <code>.google.cloud.compute.v1.HTTP2HealthCheck.ProxyHeader proxy_header = 160374142;</code>
     *
     * @param value The enum numeric value on the wire for proxyHeader to set.
     * @return This builder for chaining.
     */
    public Builder setProxyHeaderValue(int value) {

      proxyHeader_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
     * </pre>
     *
     * <code>.google.cloud.compute.v1.HTTP2HealthCheck.ProxyHeader proxy_header = 160374142;</code>
     *
     * @return The proxyHeader.
     */
    @java.lang.Override
    public com.google.cloud.compute.v1.HTTP2HealthCheck.ProxyHeader getProxyHeader() {
      @SuppressWarnings("deprecation")
      com.google.cloud.compute.v1.HTTP2HealthCheck.ProxyHeader result =
          com.google.cloud.compute.v1.HTTP2HealthCheck.ProxyHeader.valueOf(proxyHeader_);
      return result == null
          ? com.google.cloud.compute.v1.HTTP2HealthCheck.ProxyHeader.UNRECOGNIZED
          : result;
    }
    /**
     *
     *
     * <pre>
     * Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
     * </pre>
     *
     * <code>.google.cloud.compute.v1.HTTP2HealthCheck.ProxyHeader proxy_header = 160374142;</code>
     *
     * @param value The proxyHeader to set.
     * @return This builder for chaining.
     */
    public Builder setProxyHeader(com.google.cloud.compute.v1.HTTP2HealthCheck.ProxyHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }

      proxyHeader_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
     * </pre>
     *
     * <code>.google.cloud.compute.v1.HTTP2HealthCheck.ProxyHeader proxy_header = 160374142;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearProxyHeader() {

      proxyHeader_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object requestPath_ = "";
    /**
     *
     *
     * <pre>
     * The request path of the HTTP/2 health check request. The default value is /.
     * </pre>
     *
     * <code>string request_path = 229403605;</code>
     *
     * @return The requestPath.
     */
    public java.lang.String getRequestPath() {
      java.lang.Object ref = requestPath_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        requestPath_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The request path of the HTTP/2 health check request. The default value is /.
     * </pre>
     *
     * <code>string request_path = 229403605;</code>
     *
     * @return The bytes for requestPath.
     */
    public com.google.protobuf.ByteString getRequestPathBytes() {
      java.lang.Object ref = requestPath_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        requestPath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The request path of the HTTP/2 health check request. The default value is /.
     * </pre>
     *
     * <code>string request_path = 229403605;</code>
     *
     * @param value The requestPath to set.
     * @return This builder for chaining.
     */
    public Builder setRequestPath(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      requestPath_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The request path of the HTTP/2 health check request. The default value is /.
     * </pre>
     *
     * <code>string request_path = 229403605;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearRequestPath() {

      requestPath_ = getDefaultInstance().getRequestPath();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The request path of the HTTP/2 health check request. The default value is /.
     * </pre>
     *
     * <code>string request_path = 229403605;</code>
     *
     * @param value The bytes for requestPath to set.
     * @return This builder for chaining.
     */
    public Builder setRequestPathBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      requestPath_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object response_ = "";
    /**
     *
     *
     * <pre>
     * The string to match anywhere in the first 1024 bytes of the response body. If left empty (the default value), the status code determines health. The response data can only be ASCII.
     * </pre>
     *
     * <code>string response = 196547649;</code>
     *
     * @return The response.
     */
    public java.lang.String getResponse() {
      java.lang.Object ref = response_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        response_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The string to match anywhere in the first 1024 bytes of the response body. If left empty (the default value), the status code determines health. The response data can only be ASCII.
     * </pre>
     *
     * <code>string response = 196547649;</code>
     *
     * @return The bytes for response.
     */
    public com.google.protobuf.ByteString getResponseBytes() {
      java.lang.Object ref = response_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        response_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The string to match anywhere in the first 1024 bytes of the response body. If left empty (the default value), the status code determines health. The response data can only be ASCII.
     * </pre>
     *
     * <code>string response = 196547649;</code>
     *
     * @param value The response to set.
     * @return This builder for chaining.
     */
    public Builder setResponse(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      response_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The string to match anywhere in the first 1024 bytes of the response body. If left empty (the default value), the status code determines health. The response data can only be ASCII.
     * </pre>
     *
     * <code>string response = 196547649;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearResponse() {

      response_ = getDefaultInstance().getResponse();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The string to match anywhere in the first 1024 bytes of the response body. If left empty (the default value), the status code determines health. The response data can only be ASCII.
     * </pre>
     *
     * <code>string response = 196547649;</code>
     *
     * @param value The bytes for response to set.
     * @return This builder for chaining.
     */
    public Builder setResponseBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      response_ = value;
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.compute.v1.HTTP2HealthCheck)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.compute.v1.HTTP2HealthCheck)
  private static final com.google.cloud.compute.v1.HTTP2HealthCheck DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloud.compute.v1.HTTP2HealthCheck();
  }

  public static com.google.cloud.compute.v1.HTTP2HealthCheck getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<HTTP2HealthCheck> PARSER =
      new com.google.protobuf.AbstractParser<HTTP2HealthCheck>() {
        @java.lang.Override
        public HTTP2HealthCheck parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new HTTP2HealthCheck(input, extensionRegistry);
        }
      };

  public static com.google.protobuf.Parser<HTTP2HealthCheck> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<HTTP2HealthCheck> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.compute.v1.HTTP2HealthCheck getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
