/*
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/compute/v1/compute.proto

package com.google.cloud.compute.v1;

public interface CircuitBreakersOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.compute.v1.CircuitBreakers)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * The maximum number of connections to the backend service. If not specified, there is no limit.
   * </pre>
   *
   * <code>int32 max_connections = 110652154;</code>
   *
   * @return The maxConnections.
   */
  int getMaxConnections();

  /**
   *
   *
   * <pre>
   * The maximum number of pending requests allowed to the backend service. If not specified, there is no limit.
   * </pre>
   *
   * <code>int32 max_pending_requests = 107123431;</code>
   *
   * @return The maxPendingRequests.
   */
  int getMaxPendingRequests();

  /**
   *
   *
   * <pre>
   * The maximum number of parallel requests that allowed to the backend service. If not specified, there is no limit.
   * </pre>
   *
   * <code>int32 max_requests = 28097599;</code>
   *
   * @return The maxRequests.
   */
  int getMaxRequests();

  /**
   *
   *
   * <pre>
   * Maximum requests for a single connection to the backend service. This parameter is respected by both the HTTP/1.1 and HTTP/2 implementations. If not specified, there is no limit. Setting this parameter to 1 will effectively disable keep alive.
   * </pre>
   *
   * <code>int32 max_requests_per_connection = 93195072;</code>
   *
   * @return The maxRequestsPerConnection.
   */
  int getMaxRequestsPerConnection();

  /**
   *
   *
   * <pre>
   * The maximum number of parallel retries allowed to the backend cluster. If not specified, the default is 1.
   * </pre>
   *
   * <code>int32 max_retries = 55546219;</code>
   *
   * @return The maxRetries.
   */
  int getMaxRetries();
}
