/*
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/compute/v1/compute.proto

package com.google.cloud.compute.v1;

/**
 *
 *
 * <pre>
 * Configuration and status of a managed SSL certificate.
 * </pre>
 *
 * Protobuf type {@code google.cloud.compute.v1.SslCertificateManagedSslCertificate}
 */
public final class SslCertificateManagedSslCertificate
    extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.compute.v1.SslCertificateManagedSslCertificate)
    SslCertificateManagedSslCertificateOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use SslCertificateManagedSslCertificate.newBuilder() to construct.
  private SslCertificateManagedSslCertificate(
      com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private SslCertificateManagedSslCertificate() {
    domains_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    status_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new SslCertificateManagedSslCertificate();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
    return this.unknownFields;
  }

  private SslCertificateManagedSslCertificate(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 734961258:
            {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                domainStatus_ =
                    com.google.protobuf.MapField.newMapField(
                        DomainStatusDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String> domainStatus__ =
                  input.readMessage(
                      DomainStatusDefaultEntryHolder.defaultEntry.getParserForType(),
                      extensionRegistry);
              domainStatus_.getMutableMap().put(domainStatus__.getKey(), domainStatus__.getValue());
              break;
            }
          case 1450082192:
            {
              int rawValue = input.readEnum();

              status_ = rawValue;
              break;
            }
          case 1815486842:
            {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                domains_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              domains_.add(s);
              break;
            }
          default:
            {
              if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        domains_ = domains_.getUnmodifiableView();
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.compute.v1.Compute
        .internal_static_google_cloud_compute_v1_SslCertificateManagedSslCertificate_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(int number) {
    switch (number) {
      case 91870157:
        return internalGetDomainStatus();
      default:
        throw new RuntimeException("Invalid map field number: " + number);
    }
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.compute.v1.Compute
        .internal_static_google_cloud_compute_v1_SslCertificateManagedSslCertificate_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.compute.v1.SslCertificateManagedSslCertificate.class,
            com.google.cloud.compute.v1.SslCertificateManagedSslCertificate.Builder.class);
  }

  /**
   *
   *
   * <pre>
   * [Output only] Status of the managed certificate resource.
   * </pre>
   *
   * Protobuf enum {@code google.cloud.compute.v1.SslCertificateManagedSslCertificate.Status}
   */
  public enum Status implements com.google.protobuf.ProtocolMessageEnum {
    /**
     *
     *
     * <pre>
     * A value indicating that the enum field is not set.
     * </pre>
     *
     * <code>UNDEFINED_STATUS = 0;</code>
     */
    UNDEFINED_STATUS(0),
    /** <code>ACTIVE = 46297862;</code> */
    ACTIVE(46297862),
    /** <code>MANAGED_CERTIFICATE_STATUS_UNSPECIFIED = 206365394;</code> */
    MANAGED_CERTIFICATE_STATUS_UNSPECIFIED(206365394),
    /** <code>PROVISIONING = 22461165;</code> */
    PROVISIONING(22461165),
    /** <code>PROVISIONING_FAILED = 76813775;</code> */
    PROVISIONING_FAILED(76813775),
    /** <code>PROVISIONING_FAILED_PERMANENTLY = 6600747;</code> */
    PROVISIONING_FAILED_PERMANENTLY(6600747),
    /** <code>RENEWAL_FAILED = 166223620;</code> */
    RENEWAL_FAILED(166223620),
    UNRECOGNIZED(-1),
    ;

    /**
     *
     *
     * <pre>
     * A value indicating that the enum field is not set.
     * </pre>
     *
     * <code>UNDEFINED_STATUS = 0;</code>
     */
    public static final int UNDEFINED_STATUS_VALUE = 0;
    /** <code>ACTIVE = 46297862;</code> */
    public static final int ACTIVE_VALUE = 46297862;
    /** <code>MANAGED_CERTIFICATE_STATUS_UNSPECIFIED = 206365394;</code> */
    public static final int MANAGED_CERTIFICATE_STATUS_UNSPECIFIED_VALUE = 206365394;
    /** <code>PROVISIONING = 22461165;</code> */
    public static final int PROVISIONING_VALUE = 22461165;
    /** <code>PROVISIONING_FAILED = 76813775;</code> */
    public static final int PROVISIONING_FAILED_VALUE = 76813775;
    /** <code>PROVISIONING_FAILED_PERMANENTLY = 6600747;</code> */
    public static final int PROVISIONING_FAILED_PERMANENTLY_VALUE = 6600747;
    /** <code>RENEWAL_FAILED = 166223620;</code> */
    public static final int RENEWAL_FAILED_VALUE = 166223620;

    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Status valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Status forNumber(int value) {
      switch (value) {
        case 0:
          return UNDEFINED_STATUS;
        case 46297862:
          return ACTIVE;
        case 206365394:
          return MANAGED_CERTIFICATE_STATUS_UNSPECIFIED;
        case 22461165:
          return PROVISIONING;
        case 76813775:
          return PROVISIONING_FAILED;
        case 6600747:
          return PROVISIONING_FAILED_PERMANENTLY;
        case 166223620:
          return RENEWAL_FAILED;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Status> internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<Status> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<Status>() {
          public Status findValueByNumber(int number) {
            return Status.forNumber(number);
          }
        };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return com.google.cloud.compute.v1.SslCertificateManagedSslCertificate.getDescriptor()
          .getEnumTypes()
          .get(0);
    }

    private static final Status[] VALUES = values();

    public static Status valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Status(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.cloud.compute.v1.SslCertificateManagedSslCertificate.Status)
  }

  public static final int DOMAIN_STATUS_FIELD_NUMBER = 91870157;

  private static final class DomainStatusDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<java.lang.String, java.lang.String> defaultEntry =
        com.google.protobuf.MapEntry.<java.lang.String, java.lang.String>newDefaultInstance(
            com.google.cloud.compute.v1.Compute
                .internal_static_google_cloud_compute_v1_SslCertificateManagedSslCertificate_DomainStatusEntry_descriptor,
            com.google.protobuf.WireFormat.FieldType.STRING,
            "",
            com.google.protobuf.WireFormat.FieldType.STRING,
            "");
  }

  private com.google.protobuf.MapField<java.lang.String, java.lang.String> domainStatus_;

  private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetDomainStatus() {
    if (domainStatus_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          DomainStatusDefaultEntryHolder.defaultEntry);
    }
    return domainStatus_;
  }

  public int getDomainStatusCount() {
    return internalGetDomainStatus().getMap().size();
  }
  /**
   *
   *
   * <pre>
   * [Output only] Detailed statuses of the domains specified for managed certificate resource.
   * </pre>
   *
   * <code>map&lt;string, string&gt; domain_status = 91870157;</code>
   */
  @java.lang.Override
  public boolean containsDomainStatus(java.lang.String key) {
    if (key == null) {
      throw new java.lang.NullPointerException();
    }
    return internalGetDomainStatus().getMap().containsKey(key);
  }
  /** Use {@link #getDomainStatusMap()} instead. */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getDomainStatus() {
    return getDomainStatusMap();
  }
  /**
   *
   *
   * <pre>
   * [Output only] Detailed statuses of the domains specified for managed certificate resource.
   * </pre>
   *
   * <code>map&lt;string, string&gt; domain_status = 91870157;</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.String, java.lang.String> getDomainStatusMap() {
    return internalGetDomainStatus().getMap();
  }
  /**
   *
   *
   * <pre>
   * [Output only] Detailed statuses of the domains specified for managed certificate resource.
   * </pre>
   *
   * <code>map&lt;string, string&gt; domain_status = 91870157;</code>
   */
  @java.lang.Override
  public java.lang.String getDomainStatusOrDefault(
      java.lang.String key, java.lang.String defaultValue) {
    if (key == null) {
      throw new java.lang.NullPointerException();
    }
    java.util.Map<java.lang.String, java.lang.String> map = internalGetDomainStatus().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   *
   *
   * <pre>
   * [Output only] Detailed statuses of the domains specified for managed certificate resource.
   * </pre>
   *
   * <code>map&lt;string, string&gt; domain_status = 91870157;</code>
   */
  @java.lang.Override
  public java.lang.String getDomainStatusOrThrow(java.lang.String key) {
    if (key == null) {
      throw new java.lang.NullPointerException();
    }
    java.util.Map<java.lang.String, java.lang.String> map = internalGetDomainStatus().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int DOMAINS_FIELD_NUMBER = 226935855;
  private com.google.protobuf.LazyStringList domains_;
  /**
   *
   *
   * <pre>
   * The domains for which a managed SSL certificate will be generated. Currently only single-domain certs are supported.
   * </pre>
   *
   * <code>repeated string domains = 226935855;</code>
   *
   * @return A list containing the domains.
   */
  public com.google.protobuf.ProtocolStringList getDomainsList() {
    return domains_;
  }
  /**
   *
   *
   * <pre>
   * The domains for which a managed SSL certificate will be generated. Currently only single-domain certs are supported.
   * </pre>
   *
   * <code>repeated string domains = 226935855;</code>
   *
   * @return The count of domains.
   */
  public int getDomainsCount() {
    return domains_.size();
  }
  /**
   *
   *
   * <pre>
   * The domains for which a managed SSL certificate will be generated. Currently only single-domain certs are supported.
   * </pre>
   *
   * <code>repeated string domains = 226935855;</code>
   *
   * @param index The index of the element to return.
   * @return The domains at the given index.
   */
  public java.lang.String getDomains(int index) {
    return domains_.get(index);
  }
  /**
   *
   *
   * <pre>
   * The domains for which a managed SSL certificate will be generated. Currently only single-domain certs are supported.
   * </pre>
   *
   * <code>repeated string domains = 226935855;</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the domains at the given index.
   */
  public com.google.protobuf.ByteString getDomainsBytes(int index) {
    return domains_.getByteString(index);
  }

  public static final int STATUS_FIELD_NUMBER = 181260274;
  private int status_;
  /**
   *
   *
   * <pre>
   * [Output only] Status of the managed certificate resource.
   * </pre>
   *
   * <code>.google.cloud.compute.v1.SslCertificateManagedSslCertificate.Status status = 181260274;
   * </code>
   *
   * @return The enum numeric value on the wire for status.
   */
  @java.lang.Override
  public int getStatusValue() {
    return status_;
  }
  /**
   *
   *
   * <pre>
   * [Output only] Status of the managed certificate resource.
   * </pre>
   *
   * <code>.google.cloud.compute.v1.SslCertificateManagedSslCertificate.Status status = 181260274;
   * </code>
   *
   * @return The status.
   */
  @java.lang.Override
  public com.google.cloud.compute.v1.SslCertificateManagedSslCertificate.Status getStatus() {
    @SuppressWarnings("deprecation")
    com.google.cloud.compute.v1.SslCertificateManagedSslCertificate.Status result =
        com.google.cloud.compute.v1.SslCertificateManagedSslCertificate.Status.valueOf(status_);
    return result == null
        ? com.google.cloud.compute.v1.SslCertificateManagedSslCertificate.Status.UNRECOGNIZED
        : result;
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    com.google.protobuf.GeneratedMessageV3.serializeStringMapTo(
        output, internalGetDomainStatus(), DomainStatusDefaultEntryHolder.defaultEntry, 91870157);
    if (status_
        != com.google.cloud.compute.v1.SslCertificateManagedSslCertificate.Status.UNDEFINED_STATUS
            .getNumber()) {
      output.writeEnum(181260274, status_);
    }
    for (int i = 0; i < domains_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 226935855, domains_.getRaw(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry :
        internalGetDomainStatus().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.String> domainStatus__ =
          DomainStatusDefaultEntryHolder.defaultEntry
              .newBuilderForType()
              .setKey(entry.getKey())
              .setValue(entry.getValue())
              .build();
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(91870157, domainStatus__);
    }
    if (status_
        != com.google.cloud.compute.v1.SslCertificateManagedSslCertificate.Status.UNDEFINED_STATUS
            .getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(181260274, status_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < domains_.size(); i++) {
        dataSize += computeStringSizeNoTag(domains_.getRaw(i));
      }
      size += dataSize;
      size += 5 * getDomainsList().size();
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.compute.v1.SslCertificateManagedSslCertificate)) {
      return super.equals(obj);
    }
    com.google.cloud.compute.v1.SslCertificateManagedSslCertificate other =
        (com.google.cloud.compute.v1.SslCertificateManagedSslCertificate) obj;

    if (!internalGetDomainStatus().equals(other.internalGetDomainStatus())) return false;
    if (!getDomainsList().equals(other.getDomainsList())) return false;
    if (status_ != other.status_) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (!internalGetDomainStatus().getMap().isEmpty()) {
      hash = (37 * hash) + DOMAIN_STATUS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetDomainStatus().hashCode();
    }
    if (getDomainsCount() > 0) {
      hash = (37 * hash) + DOMAINS_FIELD_NUMBER;
      hash = (53 * hash) + getDomainsList().hashCode();
    }
    hash = (37 * hash) + STATUS_FIELD_NUMBER;
    hash = (53 * hash) + status_;
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.compute.v1.SslCertificateManagedSslCertificate parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.compute.v1.SslCertificateManagedSslCertificate parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.compute.v1.SslCertificateManagedSslCertificate parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.compute.v1.SslCertificateManagedSslCertificate parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.compute.v1.SslCertificateManagedSslCertificate parseFrom(
      byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.compute.v1.SslCertificateManagedSslCertificate parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.compute.v1.SslCertificateManagedSslCertificate parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.compute.v1.SslCertificateManagedSslCertificate parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.compute.v1.SslCertificateManagedSslCertificate parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.compute.v1.SslCertificateManagedSslCertificate parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.compute.v1.SslCertificateManagedSslCertificate parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.compute.v1.SslCertificateManagedSslCertificate parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      com.google.cloud.compute.v1.SslCertificateManagedSslCertificate prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Configuration and status of a managed SSL certificate.
   * </pre>
   *
   * Protobuf type {@code google.cloud.compute.v1.SslCertificateManagedSslCertificate}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.compute.v1.SslCertificateManagedSslCertificate)
      com.google.cloud.compute.v1.SslCertificateManagedSslCertificateOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.compute.v1.Compute
          .internal_static_google_cloud_compute_v1_SslCertificateManagedSslCertificate_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(int number) {
      switch (number) {
        case 91870157:
          return internalGetDomainStatus();
        default:
          throw new RuntimeException("Invalid map field number: " + number);
      }
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(int number) {
      switch (number) {
        case 91870157:
          return internalGetMutableDomainStatus();
        default:
          throw new RuntimeException("Invalid map field number: " + number);
      }
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.compute.v1.Compute
          .internal_static_google_cloud_compute_v1_SslCertificateManagedSslCertificate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.compute.v1.SslCertificateManagedSslCertificate.class,
              com.google.cloud.compute.v1.SslCertificateManagedSslCertificate.Builder.class);
    }

    // Construct using com.google.cloud.compute.v1.SslCertificateManagedSslCertificate.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {}
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      internalGetMutableDomainStatus().clear();
      domains_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000002);
      status_ = 0;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.compute.v1.Compute
          .internal_static_google_cloud_compute_v1_SslCertificateManagedSslCertificate_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.compute.v1.SslCertificateManagedSslCertificate
        getDefaultInstanceForType() {
      return com.google.cloud.compute.v1.SslCertificateManagedSslCertificate.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.compute.v1.SslCertificateManagedSslCertificate build() {
      com.google.cloud.compute.v1.SslCertificateManagedSslCertificate result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.compute.v1.SslCertificateManagedSslCertificate buildPartial() {
      com.google.cloud.compute.v1.SslCertificateManagedSslCertificate result =
          new com.google.cloud.compute.v1.SslCertificateManagedSslCertificate(this);
      int from_bitField0_ = bitField0_;
      result.domainStatus_ = internalGetDomainStatus();
      result.domainStatus_.makeImmutable();
      if (((bitField0_ & 0x00000002) != 0)) {
        domains_ = domains_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000002);
      }
      result.domains_ = domains_;
      result.status_ = status_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.compute.v1.SslCertificateManagedSslCertificate) {
        return mergeFrom((com.google.cloud.compute.v1.SslCertificateManagedSslCertificate) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(
        com.google.cloud.compute.v1.SslCertificateManagedSslCertificate other) {
      if (other
          == com.google.cloud.compute.v1.SslCertificateManagedSslCertificate.getDefaultInstance())
        return this;
      internalGetMutableDomainStatus().mergeFrom(other.internalGetDomainStatus());
      if (!other.domains_.isEmpty()) {
        if (domains_.isEmpty()) {
          domains_ = other.domains_;
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          ensureDomainsIsMutable();
          domains_.addAll(other.domains_);
        }
        onChanged();
      }
      if (other.status_ != 0) {
        setStatusValue(other.getStatusValue());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.cloud.compute.v1.SslCertificateManagedSslCertificate parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage =
            (com.google.cloud.compute.v1.SslCertificateManagedSslCertificate)
                e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.MapField<java.lang.String, java.lang.String> domainStatus_;

    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetDomainStatus() {
      if (domainStatus_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            DomainStatusDefaultEntryHolder.defaultEntry);
      }
      return domainStatus_;
    }

    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMutableDomainStatus() {
      onChanged();
      ;
      if (domainStatus_ == null) {
        domainStatus_ =
            com.google.protobuf.MapField.newMapField(DomainStatusDefaultEntryHolder.defaultEntry);
      }
      if (!domainStatus_.isMutable()) {
        domainStatus_ = domainStatus_.copy();
      }
      return domainStatus_;
    }

    public int getDomainStatusCount() {
      return internalGetDomainStatus().getMap().size();
    }
    /**
     *
     *
     * <pre>
     * [Output only] Detailed statuses of the domains specified for managed certificate resource.
     * </pre>
     *
     * <code>map&lt;string, string&gt; domain_status = 91870157;</code>
     */
    @java.lang.Override
    public boolean containsDomainStatus(java.lang.String key) {
      if (key == null) {
        throw new java.lang.NullPointerException();
      }
      return internalGetDomainStatus().getMap().containsKey(key);
    }
    /** Use {@link #getDomainStatusMap()} instead. */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getDomainStatus() {
      return getDomainStatusMap();
    }
    /**
     *
     *
     * <pre>
     * [Output only] Detailed statuses of the domains specified for managed certificate resource.
     * </pre>
     *
     * <code>map&lt;string, string&gt; domain_status = 91870157;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.String> getDomainStatusMap() {
      return internalGetDomainStatus().getMap();
    }
    /**
     *
     *
     * <pre>
     * [Output only] Detailed statuses of the domains specified for managed certificate resource.
     * </pre>
     *
     * <code>map&lt;string, string&gt; domain_status = 91870157;</code>
     */
    @java.lang.Override
    public java.lang.String getDomainStatusOrDefault(
        java.lang.String key, java.lang.String defaultValue) {
      if (key == null) {
        throw new java.lang.NullPointerException();
      }
      java.util.Map<java.lang.String, java.lang.String> map = internalGetDomainStatus().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     *
     *
     * <pre>
     * [Output only] Detailed statuses of the domains specified for managed certificate resource.
     * </pre>
     *
     * <code>map&lt;string, string&gt; domain_status = 91870157;</code>
     */
    @java.lang.Override
    public java.lang.String getDomainStatusOrThrow(java.lang.String key) {
      if (key == null) {
        throw new java.lang.NullPointerException();
      }
      java.util.Map<java.lang.String, java.lang.String> map = internalGetDomainStatus().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearDomainStatus() {
      internalGetMutableDomainStatus().getMutableMap().clear();
      return this;
    }
    /**
     *
     *
     * <pre>
     * [Output only] Detailed statuses of the domains specified for managed certificate resource.
     * </pre>
     *
     * <code>map&lt;string, string&gt; domain_status = 91870157;</code>
     */
    public Builder removeDomainStatus(java.lang.String key) {
      if (key == null) {
        throw new java.lang.NullPointerException();
      }
      internalGetMutableDomainStatus().getMutableMap().remove(key);
      return this;
    }
    /** Use alternate mutation accessors instead. */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getMutableDomainStatus() {
      return internalGetMutableDomainStatus().getMutableMap();
    }
    /**
     *
     *
     * <pre>
     * [Output only] Detailed statuses of the domains specified for managed certificate resource.
     * </pre>
     *
     * <code>map&lt;string, string&gt; domain_status = 91870157;</code>
     */
    public Builder putDomainStatus(java.lang.String key, java.lang.String value) {
      if (key == null) {
        throw new java.lang.NullPointerException();
      }
      if (value == null) {
        throw new java.lang.NullPointerException();
      }
      internalGetMutableDomainStatus().getMutableMap().put(key, value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * [Output only] Detailed statuses of the domains specified for managed certificate resource.
     * </pre>
     *
     * <code>map&lt;string, string&gt; domain_status = 91870157;</code>
     */
    public Builder putAllDomainStatus(java.util.Map<java.lang.String, java.lang.String> values) {
      internalGetMutableDomainStatus().getMutableMap().putAll(values);
      return this;
    }

    private com.google.protobuf.LazyStringList domains_ =
        com.google.protobuf.LazyStringArrayList.EMPTY;

    private void ensureDomainsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        domains_ = new com.google.protobuf.LazyStringArrayList(domains_);
        bitField0_ |= 0x00000002;
      }
    }
    /**
     *
     *
     * <pre>
     * The domains for which a managed SSL certificate will be generated. Currently only single-domain certs are supported.
     * </pre>
     *
     * <code>repeated string domains = 226935855;</code>
     *
     * @return A list containing the domains.
     */
    public com.google.protobuf.ProtocolStringList getDomainsList() {
      return domains_.getUnmodifiableView();
    }
    /**
     *
     *
     * <pre>
     * The domains for which a managed SSL certificate will be generated. Currently only single-domain certs are supported.
     * </pre>
     *
     * <code>repeated string domains = 226935855;</code>
     *
     * @return The count of domains.
     */
    public int getDomainsCount() {
      return domains_.size();
    }
    /**
     *
     *
     * <pre>
     * The domains for which a managed SSL certificate will be generated. Currently only single-domain certs are supported.
     * </pre>
     *
     * <code>repeated string domains = 226935855;</code>
     *
     * @param index The index of the element to return.
     * @return The domains at the given index.
     */
    public java.lang.String getDomains(int index) {
      return domains_.get(index);
    }
    /**
     *
     *
     * <pre>
     * The domains for which a managed SSL certificate will be generated. Currently only single-domain certs are supported.
     * </pre>
     *
     * <code>repeated string domains = 226935855;</code>
     *
     * @param index The index of the value to return.
     * @return The bytes of the domains at the given index.
     */
    public com.google.protobuf.ByteString getDomainsBytes(int index) {
      return domains_.getByteString(index);
    }
    /**
     *
     *
     * <pre>
     * The domains for which a managed SSL certificate will be generated. Currently only single-domain certs are supported.
     * </pre>
     *
     * <code>repeated string domains = 226935855;</code>
     *
     * @param index The index to set the value at.
     * @param value The domains to set.
     * @return This builder for chaining.
     */
    public Builder setDomains(int index, java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureDomainsIsMutable();
      domains_.set(index, value);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The domains for which a managed SSL certificate will be generated. Currently only single-domain certs are supported.
     * </pre>
     *
     * <code>repeated string domains = 226935855;</code>
     *
     * @param value The domains to add.
     * @return This builder for chaining.
     */
    public Builder addDomains(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureDomainsIsMutable();
      domains_.add(value);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The domains for which a managed SSL certificate will be generated. Currently only single-domain certs are supported.
     * </pre>
     *
     * <code>repeated string domains = 226935855;</code>
     *
     * @param values The domains to add.
     * @return This builder for chaining.
     */
    public Builder addAllDomains(java.lang.Iterable<java.lang.String> values) {
      ensureDomainsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(values, domains_);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The domains for which a managed SSL certificate will be generated. Currently only single-domain certs are supported.
     * </pre>
     *
     * <code>repeated string domains = 226935855;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearDomains() {
      domains_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The domains for which a managed SSL certificate will be generated. Currently only single-domain certs are supported.
     * </pre>
     *
     * <code>repeated string domains = 226935855;</code>
     *
     * @param value The bytes of the domains to add.
     * @return This builder for chaining.
     */
    public Builder addDomainsBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      ensureDomainsIsMutable();
      domains_.add(value);
      onChanged();
      return this;
    }

    private int status_ = 0;
    /**
     *
     *
     * <pre>
     * [Output only] Status of the managed certificate resource.
     * </pre>
     *
     * <code>.google.cloud.compute.v1.SslCertificateManagedSslCertificate.Status status = 181260274;
     * </code>
     *
     * @return The enum numeric value on the wire for status.
     */
    @java.lang.Override
    public int getStatusValue() {
      return status_;
    }
    /**
     *
     *
     * <pre>
     * [Output only] Status of the managed certificate resource.
     * </pre>
     *
     * <code>.google.cloud.compute.v1.SslCertificateManagedSslCertificate.Status status = 181260274;
     * </code>
     *
     * @param value The enum numeric value on the wire for status to set.
     * @return This builder for chaining.
     */
    public Builder setStatusValue(int value) {

      status_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * [Output only] Status of the managed certificate resource.
     * </pre>
     *
     * <code>.google.cloud.compute.v1.SslCertificateManagedSslCertificate.Status status = 181260274;
     * </code>
     *
     * @return The status.
     */
    @java.lang.Override
    public com.google.cloud.compute.v1.SslCertificateManagedSslCertificate.Status getStatus() {
      @SuppressWarnings("deprecation")
      com.google.cloud.compute.v1.SslCertificateManagedSslCertificate.Status result =
          com.google.cloud.compute.v1.SslCertificateManagedSslCertificate.Status.valueOf(status_);
      return result == null
          ? com.google.cloud.compute.v1.SslCertificateManagedSslCertificate.Status.UNRECOGNIZED
          : result;
    }
    /**
     *
     *
     * <pre>
     * [Output only] Status of the managed certificate resource.
     * </pre>
     *
     * <code>.google.cloud.compute.v1.SslCertificateManagedSslCertificate.Status status = 181260274;
     * </code>
     *
     * @param value The status to set.
     * @return This builder for chaining.
     */
    public Builder setStatus(
        com.google.cloud.compute.v1.SslCertificateManagedSslCertificate.Status value) {
      if (value == null) {
        throw new NullPointerException();
      }

      status_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * [Output only] Status of the managed certificate resource.
     * </pre>
     *
     * <code>.google.cloud.compute.v1.SslCertificateManagedSslCertificate.Status status = 181260274;
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearStatus() {

      status_ = 0;
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.compute.v1.SslCertificateManagedSslCertificate)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.compute.v1.SslCertificateManagedSslCertificate)
  private static final com.google.cloud.compute.v1.SslCertificateManagedSslCertificate
      DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloud.compute.v1.SslCertificateManagedSslCertificate();
  }

  public static com.google.cloud.compute.v1.SslCertificateManagedSslCertificate
      getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SslCertificateManagedSslCertificate> PARSER =
      new com.google.protobuf.AbstractParser<SslCertificateManagedSslCertificate>() {
        @java.lang.Override
        public SslCertificateManagedSslCertificate parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new SslCertificateManagedSslCertificate(input, extensionRegistry);
        }
      };

  public static com.google.protobuf.Parser<SslCertificateManagedSslCertificate> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SslCertificateManagedSslCertificate> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.compute.v1.SslCertificateManagedSslCertificate
      getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
