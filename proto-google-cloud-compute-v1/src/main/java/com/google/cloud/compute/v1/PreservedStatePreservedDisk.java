/*
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/compute/v1/compute.proto

package com.google.cloud.compute.v1;

/**
 *
 *
 * <pre>
 * </pre>
 *
 * Protobuf type {@code google.cloud.compute.v1.PreservedStatePreservedDisk}
 */
public final class PreservedStatePreservedDisk extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.compute.v1.PreservedStatePreservedDisk)
    PreservedStatePreservedDiskOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use PreservedStatePreservedDisk.newBuilder() to construct.
  private PreservedStatePreservedDisk(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private PreservedStatePreservedDisk() {
    autoDelete_ = 0;
    mode_ = 0;
    source_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new PreservedStatePreservedDisk();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
    return this.unknownFields;
  }

  private PreservedStatePreservedDisk(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 26856728:
            {
              int rawValue = input.readEnum();

              mode_ = rawValue;
              break;
            }
          case 1417887962:
            {
              java.lang.String s = input.readStringRequireUtf8();

              source_ = s;
              break;
            }
          case 1570607576:
            {
              int rawValue = input.readEnum();

              autoDelete_ = rawValue;
              break;
            }
          default:
            {
              if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.compute.v1.Compute
        .internal_static_google_cloud_compute_v1_PreservedStatePreservedDisk_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.compute.v1.Compute
        .internal_static_google_cloud_compute_v1_PreservedStatePreservedDisk_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.compute.v1.PreservedStatePreservedDisk.class,
            com.google.cloud.compute.v1.PreservedStatePreservedDisk.Builder.class);
  }

  /**
   *
   *
   * <pre>
   * These stateful disks will never be deleted during autohealing, update, instance recreate operations. This flag is used to configure if the disk should be deleted after it is no longer used by the group, e.g. when the given instance or the whole MIG is deleted. Note: disks attached in READ_ONLY mode cannot be auto-deleted.
   * </pre>
   *
   * Protobuf enum {@code google.cloud.compute.v1.PreservedStatePreservedDisk.AutoDelete}
   */
  public enum AutoDelete implements com.google.protobuf.ProtocolMessageEnum {
    /**
     *
     *
     * <pre>
     * A value indicating that the enum field is not set.
     * </pre>
     *
     * <code>UNDEFINED_AUTO_DELETE = 0;</code>
     */
    UNDEFINED_AUTO_DELETE(0),
    /** <code>NEVER = 74175084;</code> */
    NEVER(74175084),
    /** <code>ON_PERMANENT_INSTANCE_DELETION = 95727719;</code> */
    ON_PERMANENT_INSTANCE_DELETION(95727719),
    UNRECOGNIZED(-1),
    ;

    /**
     *
     *
     * <pre>
     * A value indicating that the enum field is not set.
     * </pre>
     *
     * <code>UNDEFINED_AUTO_DELETE = 0;</code>
     */
    public static final int UNDEFINED_AUTO_DELETE_VALUE = 0;
    /** <code>NEVER = 74175084;</code> */
    public static final int NEVER_VALUE = 74175084;
    /** <code>ON_PERMANENT_INSTANCE_DELETION = 95727719;</code> */
    public static final int ON_PERMANENT_INSTANCE_DELETION_VALUE = 95727719;

    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AutoDelete valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static AutoDelete forNumber(int value) {
      switch (value) {
        case 0:
          return UNDEFINED_AUTO_DELETE;
        case 74175084:
          return NEVER;
        case 95727719:
          return ON_PERMANENT_INSTANCE_DELETION;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AutoDelete> internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<AutoDelete> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<AutoDelete>() {
          public AutoDelete findValueByNumber(int number) {
            return AutoDelete.forNumber(number);
          }
        };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return com.google.cloud.compute.v1.PreservedStatePreservedDisk.getDescriptor()
          .getEnumTypes()
          .get(0);
    }

    private static final AutoDelete[] VALUES = values();

    public static AutoDelete valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AutoDelete(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.cloud.compute.v1.PreservedStatePreservedDisk.AutoDelete)
  }

  /**
   *
   *
   * <pre>
   * The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If not specified, the default is to attach the disk in READ_WRITE mode.
   * </pre>
   *
   * Protobuf enum {@code google.cloud.compute.v1.PreservedStatePreservedDisk.Mode}
   */
  public enum Mode implements com.google.protobuf.ProtocolMessageEnum {
    /**
     *
     *
     * <pre>
     * A value indicating that the enum field is not set.
     * </pre>
     *
     * <code>UNDEFINED_MODE = 0;</code>
     */
    UNDEFINED_MODE(0),
    /** <code>READ_ONLY = 91950261;</code> */
    READ_ONLY(91950261),
    /** <code>READ_WRITE = 173607894;</code> */
    READ_WRITE(173607894),
    UNRECOGNIZED(-1),
    ;

    /**
     *
     *
     * <pre>
     * A value indicating that the enum field is not set.
     * </pre>
     *
     * <code>UNDEFINED_MODE = 0;</code>
     */
    public static final int UNDEFINED_MODE_VALUE = 0;
    /** <code>READ_ONLY = 91950261;</code> */
    public static final int READ_ONLY_VALUE = 91950261;
    /** <code>READ_WRITE = 173607894;</code> */
    public static final int READ_WRITE_VALUE = 173607894;

    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Mode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Mode forNumber(int value) {
      switch (value) {
        case 0:
          return UNDEFINED_MODE;
        case 91950261:
          return READ_ONLY;
        case 173607894:
          return READ_WRITE;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Mode> internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<Mode> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<Mode>() {
          public Mode findValueByNumber(int number) {
            return Mode.forNumber(number);
          }
        };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return com.google.cloud.compute.v1.PreservedStatePreservedDisk.getDescriptor()
          .getEnumTypes()
          .get(1);
    }

    private static final Mode[] VALUES = values();

    public static Mode valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Mode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.cloud.compute.v1.PreservedStatePreservedDisk.Mode)
  }

  public static final int AUTO_DELETE_FIELD_NUMBER = 196325947;
  private int autoDelete_;
  /**
   *
   *
   * <pre>
   * These stateful disks will never be deleted during autohealing, update, instance recreate operations. This flag is used to configure if the disk should be deleted after it is no longer used by the group, e.g. when the given instance or the whole MIG is deleted. Note: disks attached in READ_ONLY mode cannot be auto-deleted.
   * </pre>
   *
   * <code>.google.cloud.compute.v1.PreservedStatePreservedDisk.AutoDelete auto_delete = 196325947;
   * </code>
   *
   * @return The enum numeric value on the wire for autoDelete.
   */
  @java.lang.Override
  public int getAutoDeleteValue() {
    return autoDelete_;
  }
  /**
   *
   *
   * <pre>
   * These stateful disks will never be deleted during autohealing, update, instance recreate operations. This flag is used to configure if the disk should be deleted after it is no longer used by the group, e.g. when the given instance or the whole MIG is deleted. Note: disks attached in READ_ONLY mode cannot be auto-deleted.
   * </pre>
   *
   * <code>.google.cloud.compute.v1.PreservedStatePreservedDisk.AutoDelete auto_delete = 196325947;
   * </code>
   *
   * @return The autoDelete.
   */
  @java.lang.Override
  public com.google.cloud.compute.v1.PreservedStatePreservedDisk.AutoDelete getAutoDelete() {
    @SuppressWarnings("deprecation")
    com.google.cloud.compute.v1.PreservedStatePreservedDisk.AutoDelete result =
        com.google.cloud.compute.v1.PreservedStatePreservedDisk.AutoDelete.valueOf(autoDelete_);
    return result == null
        ? com.google.cloud.compute.v1.PreservedStatePreservedDisk.AutoDelete.UNRECOGNIZED
        : result;
  }

  public static final int MODE_FIELD_NUMBER = 3357091;
  private int mode_;
  /**
   *
   *
   * <pre>
   * The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If not specified, the default is to attach the disk in READ_WRITE mode.
   * </pre>
   *
   * <code>.google.cloud.compute.v1.PreservedStatePreservedDisk.Mode mode = 3357091;</code>
   *
   * @return The enum numeric value on the wire for mode.
   */
  @java.lang.Override
  public int getModeValue() {
    return mode_;
  }
  /**
   *
   *
   * <pre>
   * The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If not specified, the default is to attach the disk in READ_WRITE mode.
   * </pre>
   *
   * <code>.google.cloud.compute.v1.PreservedStatePreservedDisk.Mode mode = 3357091;</code>
   *
   * @return The mode.
   */
  @java.lang.Override
  public com.google.cloud.compute.v1.PreservedStatePreservedDisk.Mode getMode() {
    @SuppressWarnings("deprecation")
    com.google.cloud.compute.v1.PreservedStatePreservedDisk.Mode result =
        com.google.cloud.compute.v1.PreservedStatePreservedDisk.Mode.valueOf(mode_);
    return result == null
        ? com.google.cloud.compute.v1.PreservedStatePreservedDisk.Mode.UNRECOGNIZED
        : result;
  }

  public static final int SOURCE_FIELD_NUMBER = 177235995;
  private volatile java.lang.Object source_;
  /**
   *
   *
   * <pre>
   * The URL of the disk resource that is stateful and should be attached to the VM instance.
   * </pre>
   *
   * <code>string source = 177235995;</code>
   *
   * @return The source.
   */
  @java.lang.Override
  public java.lang.String getSource() {
    java.lang.Object ref = source_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      source_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * The URL of the disk resource that is stateful and should be attached to the VM instance.
   * </pre>
   *
   * <code>string source = 177235995;</code>
   *
   * @return The bytes for source.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getSourceBytes() {
    java.lang.Object ref = source_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      source_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (mode_
        != com.google.cloud.compute.v1.PreservedStatePreservedDisk.Mode.UNDEFINED_MODE
            .getNumber()) {
      output.writeEnum(3357091, mode_);
    }
    if (!getSourceBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 177235995, source_);
    }
    if (autoDelete_
        != com.google.cloud.compute.v1.PreservedStatePreservedDisk.AutoDelete.UNDEFINED_AUTO_DELETE
            .getNumber()) {
      output.writeEnum(196325947, autoDelete_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (mode_
        != com.google.cloud.compute.v1.PreservedStatePreservedDisk.Mode.UNDEFINED_MODE
            .getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(3357091, mode_);
    }
    if (!getSourceBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(177235995, source_);
    }
    if (autoDelete_
        != com.google.cloud.compute.v1.PreservedStatePreservedDisk.AutoDelete.UNDEFINED_AUTO_DELETE
            .getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(196325947, autoDelete_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.compute.v1.PreservedStatePreservedDisk)) {
      return super.equals(obj);
    }
    com.google.cloud.compute.v1.PreservedStatePreservedDisk other =
        (com.google.cloud.compute.v1.PreservedStatePreservedDisk) obj;

    if (autoDelete_ != other.autoDelete_) return false;
    if (mode_ != other.mode_) return false;
    if (!getSource().equals(other.getSource())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + AUTO_DELETE_FIELD_NUMBER;
    hash = (53 * hash) + autoDelete_;
    hash = (37 * hash) + MODE_FIELD_NUMBER;
    hash = (53 * hash) + mode_;
    hash = (37 * hash) + SOURCE_FIELD_NUMBER;
    hash = (53 * hash) + getSource().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.compute.v1.PreservedStatePreservedDisk parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.compute.v1.PreservedStatePreservedDisk parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.compute.v1.PreservedStatePreservedDisk parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.compute.v1.PreservedStatePreservedDisk parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.compute.v1.PreservedStatePreservedDisk parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.compute.v1.PreservedStatePreservedDisk parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.compute.v1.PreservedStatePreservedDisk parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.compute.v1.PreservedStatePreservedDisk parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.compute.v1.PreservedStatePreservedDisk parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.compute.v1.PreservedStatePreservedDisk parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.compute.v1.PreservedStatePreservedDisk parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.compute.v1.PreservedStatePreservedDisk parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      com.google.cloud.compute.v1.PreservedStatePreservedDisk prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * </pre>
   *
   * Protobuf type {@code google.cloud.compute.v1.PreservedStatePreservedDisk}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.compute.v1.PreservedStatePreservedDisk)
      com.google.cloud.compute.v1.PreservedStatePreservedDiskOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.compute.v1.Compute
          .internal_static_google_cloud_compute_v1_PreservedStatePreservedDisk_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.compute.v1.Compute
          .internal_static_google_cloud_compute_v1_PreservedStatePreservedDisk_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.compute.v1.PreservedStatePreservedDisk.class,
              com.google.cloud.compute.v1.PreservedStatePreservedDisk.Builder.class);
    }

    // Construct using com.google.cloud.compute.v1.PreservedStatePreservedDisk.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {}
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      autoDelete_ = 0;

      mode_ = 0;

      source_ = "";

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.compute.v1.Compute
          .internal_static_google_cloud_compute_v1_PreservedStatePreservedDisk_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.compute.v1.PreservedStatePreservedDisk getDefaultInstanceForType() {
      return com.google.cloud.compute.v1.PreservedStatePreservedDisk.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.compute.v1.PreservedStatePreservedDisk build() {
      com.google.cloud.compute.v1.PreservedStatePreservedDisk result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.compute.v1.PreservedStatePreservedDisk buildPartial() {
      com.google.cloud.compute.v1.PreservedStatePreservedDisk result =
          new com.google.cloud.compute.v1.PreservedStatePreservedDisk(this);
      result.autoDelete_ = autoDelete_;
      result.mode_ = mode_;
      result.source_ = source_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.compute.v1.PreservedStatePreservedDisk) {
        return mergeFrom((com.google.cloud.compute.v1.PreservedStatePreservedDisk) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.compute.v1.PreservedStatePreservedDisk other) {
      if (other == com.google.cloud.compute.v1.PreservedStatePreservedDisk.getDefaultInstance())
        return this;
      if (other.autoDelete_ != 0) {
        setAutoDeleteValue(other.getAutoDeleteValue());
      }
      if (other.mode_ != 0) {
        setModeValue(other.getModeValue());
      }
      if (!other.getSource().isEmpty()) {
        source_ = other.source_;
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.cloud.compute.v1.PreservedStatePreservedDisk parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage =
            (com.google.cloud.compute.v1.PreservedStatePreservedDisk) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int autoDelete_ = 0;
    /**
     *
     *
     * <pre>
     * These stateful disks will never be deleted during autohealing, update, instance recreate operations. This flag is used to configure if the disk should be deleted after it is no longer used by the group, e.g. when the given instance or the whole MIG is deleted. Note: disks attached in READ_ONLY mode cannot be auto-deleted.
     * </pre>
     *
     * <code>
     * .google.cloud.compute.v1.PreservedStatePreservedDisk.AutoDelete auto_delete = 196325947;
     * </code>
     *
     * @return The enum numeric value on the wire for autoDelete.
     */
    @java.lang.Override
    public int getAutoDeleteValue() {
      return autoDelete_;
    }
    /**
     *
     *
     * <pre>
     * These stateful disks will never be deleted during autohealing, update, instance recreate operations. This flag is used to configure if the disk should be deleted after it is no longer used by the group, e.g. when the given instance or the whole MIG is deleted. Note: disks attached in READ_ONLY mode cannot be auto-deleted.
     * </pre>
     *
     * <code>
     * .google.cloud.compute.v1.PreservedStatePreservedDisk.AutoDelete auto_delete = 196325947;
     * </code>
     *
     * @param value The enum numeric value on the wire for autoDelete to set.
     * @return This builder for chaining.
     */
    public Builder setAutoDeleteValue(int value) {

      autoDelete_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * These stateful disks will never be deleted during autohealing, update, instance recreate operations. This flag is used to configure if the disk should be deleted after it is no longer used by the group, e.g. when the given instance or the whole MIG is deleted. Note: disks attached in READ_ONLY mode cannot be auto-deleted.
     * </pre>
     *
     * <code>
     * .google.cloud.compute.v1.PreservedStatePreservedDisk.AutoDelete auto_delete = 196325947;
     * </code>
     *
     * @return The autoDelete.
     */
    @java.lang.Override
    public com.google.cloud.compute.v1.PreservedStatePreservedDisk.AutoDelete getAutoDelete() {
      @SuppressWarnings("deprecation")
      com.google.cloud.compute.v1.PreservedStatePreservedDisk.AutoDelete result =
          com.google.cloud.compute.v1.PreservedStatePreservedDisk.AutoDelete.valueOf(autoDelete_);
      return result == null
          ? com.google.cloud.compute.v1.PreservedStatePreservedDisk.AutoDelete.UNRECOGNIZED
          : result;
    }
    /**
     *
     *
     * <pre>
     * These stateful disks will never be deleted during autohealing, update, instance recreate operations. This flag is used to configure if the disk should be deleted after it is no longer used by the group, e.g. when the given instance or the whole MIG is deleted. Note: disks attached in READ_ONLY mode cannot be auto-deleted.
     * </pre>
     *
     * <code>
     * .google.cloud.compute.v1.PreservedStatePreservedDisk.AutoDelete auto_delete = 196325947;
     * </code>
     *
     * @param value The autoDelete to set.
     * @return This builder for chaining.
     */
    public Builder setAutoDelete(
        com.google.cloud.compute.v1.PreservedStatePreservedDisk.AutoDelete value) {
      if (value == null) {
        throw new NullPointerException();
      }

      autoDelete_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * These stateful disks will never be deleted during autohealing, update, instance recreate operations. This flag is used to configure if the disk should be deleted after it is no longer used by the group, e.g. when the given instance or the whole MIG is deleted. Note: disks attached in READ_ONLY mode cannot be auto-deleted.
     * </pre>
     *
     * <code>
     * .google.cloud.compute.v1.PreservedStatePreservedDisk.AutoDelete auto_delete = 196325947;
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearAutoDelete() {

      autoDelete_ = 0;
      onChanged();
      return this;
    }

    private int mode_ = 0;
    /**
     *
     *
     * <pre>
     * The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If not specified, the default is to attach the disk in READ_WRITE mode.
     * </pre>
     *
     * <code>.google.cloud.compute.v1.PreservedStatePreservedDisk.Mode mode = 3357091;</code>
     *
     * @return The enum numeric value on the wire for mode.
     */
    @java.lang.Override
    public int getModeValue() {
      return mode_;
    }
    /**
     *
     *
     * <pre>
     * The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If not specified, the default is to attach the disk in READ_WRITE mode.
     * </pre>
     *
     * <code>.google.cloud.compute.v1.PreservedStatePreservedDisk.Mode mode = 3357091;</code>
     *
     * @param value The enum numeric value on the wire for mode to set.
     * @return This builder for chaining.
     */
    public Builder setModeValue(int value) {

      mode_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If not specified, the default is to attach the disk in READ_WRITE mode.
     * </pre>
     *
     * <code>.google.cloud.compute.v1.PreservedStatePreservedDisk.Mode mode = 3357091;</code>
     *
     * @return The mode.
     */
    @java.lang.Override
    public com.google.cloud.compute.v1.PreservedStatePreservedDisk.Mode getMode() {
      @SuppressWarnings("deprecation")
      com.google.cloud.compute.v1.PreservedStatePreservedDisk.Mode result =
          com.google.cloud.compute.v1.PreservedStatePreservedDisk.Mode.valueOf(mode_);
      return result == null
          ? com.google.cloud.compute.v1.PreservedStatePreservedDisk.Mode.UNRECOGNIZED
          : result;
    }
    /**
     *
     *
     * <pre>
     * The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If not specified, the default is to attach the disk in READ_WRITE mode.
     * </pre>
     *
     * <code>.google.cloud.compute.v1.PreservedStatePreservedDisk.Mode mode = 3357091;</code>
     *
     * @param value The mode to set.
     * @return This builder for chaining.
     */
    public Builder setMode(com.google.cloud.compute.v1.PreservedStatePreservedDisk.Mode value) {
      if (value == null) {
        throw new NullPointerException();
      }

      mode_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If not specified, the default is to attach the disk in READ_WRITE mode.
     * </pre>
     *
     * <code>.google.cloud.compute.v1.PreservedStatePreservedDisk.Mode mode = 3357091;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearMode() {

      mode_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object source_ = "";
    /**
     *
     *
     * <pre>
     * The URL of the disk resource that is stateful and should be attached to the VM instance.
     * </pre>
     *
     * <code>string source = 177235995;</code>
     *
     * @return The source.
     */
    public java.lang.String getSource() {
      java.lang.Object ref = source_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        source_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The URL of the disk resource that is stateful and should be attached to the VM instance.
     * </pre>
     *
     * <code>string source = 177235995;</code>
     *
     * @return The bytes for source.
     */
    public com.google.protobuf.ByteString getSourceBytes() {
      java.lang.Object ref = source_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        source_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The URL of the disk resource that is stateful and should be attached to the VM instance.
     * </pre>
     *
     * <code>string source = 177235995;</code>
     *
     * @param value The source to set.
     * @return This builder for chaining.
     */
    public Builder setSource(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      source_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The URL of the disk resource that is stateful and should be attached to the VM instance.
     * </pre>
     *
     * <code>string source = 177235995;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearSource() {

      source_ = getDefaultInstance().getSource();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The URL of the disk resource that is stateful and should be attached to the VM instance.
     * </pre>
     *
     * <code>string source = 177235995;</code>
     *
     * @param value The bytes for source to set.
     * @return This builder for chaining.
     */
    public Builder setSourceBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      source_ = value;
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.compute.v1.PreservedStatePreservedDisk)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.compute.v1.PreservedStatePreservedDisk)
  private static final com.google.cloud.compute.v1.PreservedStatePreservedDisk DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloud.compute.v1.PreservedStatePreservedDisk();
  }

  public static com.google.cloud.compute.v1.PreservedStatePreservedDisk getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<PreservedStatePreservedDisk> PARSER =
      new com.google.protobuf.AbstractParser<PreservedStatePreservedDisk>() {
        @java.lang.Override
        public PreservedStatePreservedDisk parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new PreservedStatePreservedDisk(input, extensionRegistry);
        }
      };

  public static com.google.protobuf.Parser<PreservedStatePreservedDisk> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PreservedStatePreservedDisk> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.compute.v1.PreservedStatePreservedDisk getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
